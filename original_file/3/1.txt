1
00:00:09,028 --> 00:00:11,068
我們說這個ethernet的第一代

2
00:00:11,068 --> 00:00:13,085
我們簡稱叫做10base5

3
00:00:13,085 --> 00:00:18,028
他其實就是一個比較粗線的這種同軸電纜

4
00:00:18,028 --> 00:00:20,085
的一個所謂的bus的網路

5
00:00:20,085 --> 00:00:23,075
那我們說一個ethernet的segment

6
00:00:23,075 --> 00:00:25,095
我們叫做一個網段 就是一段

7
00:00:25,095 --> 00:00:29,005
他最長呢就是五百公尺

8
00:00:29,005 --> 00:00:34,015
這是10base5的一個最基本的一段啦

9
00:00:34,015 --> 00:00:36,025
那我們的這個PC呢

10
00:00:36,025 --> 00:00:39,031
或所謂的host呢 就透過一個cable

11
00:00:39,031 --> 00:00:45,005
然後連到這個所謂的同軸電纜上 就像這個

12
00:00:45,005 --> 00:00:46,095
這個就是每一台PC呢

13
00:00:46,095 --> 00:00:49,028
都需要一個這個所謂的tap

14
00:00:49,028 --> 00:00:51,008
那這邊會有一個接口

15
00:00:51,008 --> 00:00:52,075
這個接口就是另外一條

16
00:00:52,075 --> 00:00:53,098
我們叫做transceiver cable

17
00:00:53,098 --> 00:00:57,038
這邊是接到那個PC的那個網卡

18
00:00:57,038 --> 00:01:00,008
等於說每一個PC要接到這個網路上面來

19
00:01:00,008 --> 00:01:01,095
 需要有這樣的一個tap

20
00:01:01,095 --> 00:01:05,078
然後有一個transceiver就是這個地方有一個

21
00:01:05,078 --> 00:01:08,008
這個就是所謂的transceiver啦

22
00:01:08,008 --> 00:01:13,048
就是說他本身因為這個電腦的訊號從這邊送進來

23
00:01:13,048 --> 00:01:15,095
然後同時送到這個cable上面去

24
00:01:15,095 --> 00:01:19,081
那同時這個cable的訊號呢 也會從這邊收進來

25
00:01:19,081 --> 00:01:21,011
所以她其實就是

26
00:01:21,011 --> 00:01:24,061
既可以負責傳送也可以負責接收

27
00:01:24,061 --> 00:01:26,021
所以我一般叫做transceiver

28
00:01:26,021 --> 00:01:29,008
就transmitter跟receiver這兩個字

29
00:01:29,008 --> 00:01:31,001
這個縮寫 叫transceiver

30
00:01:31,001 --> 00:01:33,075
那transceiver本身 就相當於每一台電腦呢

31
00:01:33,075 --> 00:01:37,028
都需要一個這樣的設備來做連接

32
00:01:37,028 --> 00:01:39,078
然後transceiver本身除了剛提到

33
00:01:39,078 --> 00:01:44,008
除了送訊號之外 也會接收這個進來的訊號

34
00:01:44,008 --> 00:01:49,048
然後這個transceiver本身呢就連到這個所謂的網卡

35
00:01:49,048 --> 00:01:54,008
那這個網卡呢 就是一般在電腦上面的網卡

36
00:01:54,008 --> 00:01:57,041
我們這邊就是一個類似一個網卡的例子

37
00:01:57,041 --> 00:02:00,061
那當然早期這個網卡都是一片一片

38
00:02:00,061 --> 00:02:03,028
必須插在我們電腦上面

39
00:02:03,028 --> 00:02:05,011
把電腦拆開把它插進去

40
00:02:05,011 --> 00:02:08,085
那現在的筆電其實都已經內建在裡面

41
00:02:08,085 --> 00:02:12,051
就是主機板上面呢 就已經把這個網路的這個晶片

42
00:02:12,051 --> 00:02:15,041
都已經直接接在上面了

43
00:02:16,035 --> 00:02:20,041
所以我們剛提到 在這個ethernet上面

44
00:02:20,041 --> 00:02:26,041
我們要決定說每一個PC到底在什麼時候可以傳送資料

45
00:02:26,041 --> 00:02:28,065
那個protocol叫CSMA/CD

46
00:02:28,065 --> 00:02:31,021
那這個CSMA/CD這個protocol

47
00:02:31,021 --> 00:02:35,061
我們說這個protocol本身呢 就是實作在

48
00:02:35,061 --> 00:02:38,061
我們講這個protocol就實作在這個卡上面

49
00:02:38,061 --> 00:02:40,045
就這個卡上面呢

50
00:02:40,045 --> 00:02:42,081
他就做了所謂的CSMA/CD

51
00:02:42,081 --> 00:02:45,058
等於說這個卡裡面有個晶片

52
00:02:45,058 --> 00:02:48,068
這個晶片本身就會根據我們這個

53
00:02:48,068 --> 00:02:50,071
從上面我們講

54
00:02:50,071 --> 00:02:52,088
這個訊號從上面跑進來嘛

55
00:02:52,088 --> 00:02:55,005
然後透過這個cable呢就進到這個卡

56
00:02:55,005 --> 00:02:57,018
那這個卡就會來偵測到說

57
00:02:57,018 --> 00:03:01,058
這個cable上面到底有沒有封包正在送

58
00:03:01,058 --> 00:03:04,095
那就所謂的carrier sense CS

59
00:03:04,095 --> 00:03:08,065
就是他會sense這個carrier有沒有carrier在上面跑

60
00:03:08,065 --> 00:03:11,008
訊號在上面跑 那如果他發現說

61
00:03:11,008 --> 00:03:13,015
這個網路上面現在沒有人在送

62
00:03:13,015 --> 00:03:15,015
他就把封包送上去的意思啦

63
00:03:15,015 --> 00:03:17,008
所以這個是所謂的CSMA的概念

64
00:03:17,008 --> 00:03:19,051
我們後面會再做比較多的解釋

65
00:03:19,051 --> 00:03:21,025
我們現在再來看一下

66
00:03:21,025 --> 00:03:24,075
這個10base5本身 到底是什麼意思

67
00:03:24,075 --> 00:03:30,038
這個10 十呢 就代表說他的速度呢是10Mbps

68
00:03:30,038 --> 00:03:33,058
這個base 一般叫所謂的base band

69
00:03:33,058 --> 00:03:34,095
base band的意思是說

70
00:03:34,095 --> 00:03:36,085
我們在這個cable上面跑呢

71
00:03:36,085 --> 00:03:39,021
只有一個band就是一個channel的意思

72
00:03:39,021 --> 00:03:42,035
那如果是他的另外一個對等叫做broadband

73
00:03:42,035 --> 00:03:44,035
broadband的時候可能會好幾個頻道

74
00:03:44,035 --> 00:03:47,008
我們講好幾個channel 像現在有線電視台

75
00:03:47,008 --> 00:03:48,095
那個有線電視的這種

76
00:03:48,095 --> 00:03:52,025
現在有線電視台的那種cable拉進來

77
00:03:52,025 --> 00:03:55,015
他就是個broadband 因為他可能有幾十個channel

78
00:03:55,015 --> 00:03:56,048
甚至上百個channel嘛

79
00:03:56,048 --> 00:04:00,068
可是我們把它用在所謂的電腦網路上面

80
00:04:00,068 --> 00:04:02,065
我們現在這個10base5呢

81
00:04:02,065 --> 00:04:06,061
他只有一個channel 我們叫做baseband 那這個5呢

82
00:04:06,061 --> 00:04:10,011
10base5 這個5呢 其實就是因為他每一段

83
00:04:10,011 --> 00:04:12,058
剛剛講的 就是只有五百公尺

84
00:04:12,058 --> 00:04:17,065
所以10base5 就是說他是一個10Mbps的網路

85
00:04:17,065 --> 00:04:22,011
他用baseband的技術 然後一段呢 最長是五百公尺

86
00:04:23,038 --> 00:04:25,078
剛剛有跟各位介紹過

87
00:04:25,078 --> 00:04:29,001
就是說 在這個10base5的這個網路底下呢

88
00:04:29,001 --> 00:04:32,058
我們說 這個就是所謂的transceiver

89
00:04:32,058 --> 00:04:36,028
transceiver在這個地方 事實上就是這個設備

90
00:04:36,028 --> 00:04:38,071
就是這個設備啦 就是這樣

91
00:04:38,071 --> 00:04:41,048
這就是transceiver 然後他在

92
00:04:41,048 --> 00:04:45,008
兩端就會有這個所謂的terminator

93
00:04:45,008 --> 00:04:48,071
這個黑黑這個 就是terminator 他把他接起來之後

94
00:04:48,071 --> 00:04:51,015
就把兩端給保護起來

95
00:04:51,015 --> 00:04:56,055
讓他訊號送到最終端的時候呢 不會再反彈回來

96
00:04:56,055 --> 00:04:58,085
也就是如果我們把這個cable

97
00:04:58,085 --> 00:05:00,065
terminator假如說不小心

98
00:05:00,065 --> 00:05:02,095
這樣子把他拔開或沒有接的話

99
00:05:02,095 --> 00:05:04,041
那這個網路就癱瘓了

100
00:05:04,041 --> 00:05:06,098
因為任何這個訊號送到這個尾巴

101
00:05:06,098 --> 00:05:07,085
就是說他可能會彈回來

102
00:05:07,085 --> 00:05:11,018
變成每一個封包自己跟自己可能就會衝撞

103
00:05:11,018 --> 00:05:15,098
所以這個terminator一定是要這樣子把他鎖起來

104
00:05:15,098 --> 00:05:16,095
那另外一端

105
00:05:16,095 --> 00:05:20,051
這個就是接所謂的coaxial cable這樣把他接起來

106
00:05:20,051 --> 00:05:22,091
所以變成這邊會有一個這個電纜 那你可以看得到

107
00:05:22,091 --> 00:05:26,058
這個電纜是比較粗啦 所以這個10base5呢

108
00:05:26,058 --> 00:05:30,028
他有另外一個名稱叫做粗線的ethernet

109
00:05:30,028 --> 00:05:33,025
因為他的線 這個同軸電纜線

110
00:05:33,025 --> 00:05:37,028
是很粗 像大拇指這麼粗的一個電纜

111
00:05:37,028 --> 00:05:41,038
當然這麼粗的電纜本身 第一個也比較笨重啦

112
00:05:41,038 --> 00:05:46,098
這個一個五百公尺的這個線 重量也很多也很重

113
00:05:46,098 --> 00:05:50,055
然後 佈線的時候呢 因為這個線纜比較粗嘛

114
00:05:50,055 --> 00:05:52,085
可能基本上佈在地上

115
00:05:52,085 --> 00:05:55,071
那佈在地上也有可能譬如說因為不小心

116
00:05:55,071 --> 00:05:59,058
可能會踢到這個tap 萬一把他鬆掉

117
00:05:59,058 --> 00:06:03,061
這個一鬆掉網路就斷掉了 整個網路就斷掉了

118
00:06:03,061 --> 00:06:05,045
所以這個是他的特色

119
00:06:05,095 --> 00:06:10,058
那我們說 如果他只有一個網段的話

120
00:06:10,058 --> 00:06:14,061
就像它的結構 就像這個我們剛剛有看過

121
00:06:14,061 --> 00:06:19,001
如果只有一個網段 就是這個網段本身呢 長五百公尺

122
00:06:19,001 --> 00:06:22,035
然後兩邊呢會有terminator嘛 最後兩邊

123
00:06:22,035 --> 00:06:26,068
把它做一個訊號的終結 把訊號能夠收納起來

124
00:06:26,068 --> 00:06:31,045
然後這個最長就是五百公尺一段

125
00:06:31,045 --> 00:06:33,068
然後等於說這個transceiver

126
00:06:33,068 --> 00:06:38,028
每一個電腦都有一個transceiver把它連接起來

127
00:06:38,028 --> 00:06:40,015
這是一段 五百公尺

128
00:06:40,015 --> 00:06:42,068
但是有時候我們這個五百公尺呢

129
00:06:42,068 --> 00:06:47,065
可能沒辦法cover我們所需要所謂的連接的範圍

130
00:06:47,065 --> 00:06:49,055
譬如說我們的範圍可能比較遠

131
00:06:49,055 --> 00:06:50,081
我們的距離比較遠

132
00:06:50,081 --> 00:06:54,078
可能一公里的這個距離

133
00:06:54,078 --> 00:06:56,078
我們只靠五百公尺可能連不起來

134
00:06:56,078 --> 00:07:00,038
就不夠 那不夠的話我們可以透過另外一個設備呢

135
00:07:00,038 --> 00:07:03,018
我們等下會介紹 來可以把它連起來

136
00:07:03,018 --> 00:07:07,078
那這個地方我們先介紹一下說 那在這個cable上面

137
00:07:07,078 --> 00:07:11,078
上面送的訊號 到底是什麼訊號啦

138
00:07:11,078 --> 00:07:16,045
那我們說ethernet用了一個滿有名的這個coding的方式

139
00:07:16,045 --> 00:07:18,045
我們叫做Manchester encoding

140
00:07:18,045 --> 00:07:20,091
這個coding的目的就是說

141
00:07:20,091 --> 00:07:23,095
當我們把這個訊號 我們把data送上去

142
00:07:23,095 --> 00:07:26,051
因為這個data一般都是我們講binary

143
00:07:26,051 --> 00:07:31,005
就是0101啦 那最簡單的這種訊號就是

144
00:07:31,005 --> 00:07:33,021
譬如說我用0101來講

145
00:07:33,021 --> 00:07:36,088
我們1就是高電位 那0的話就是低電位

146
00:07:36,088 --> 00:07:39,098
就是說我在上面 因為我可以量他的電壓啦

147
00:07:39,098 --> 00:07:42,005
等於說 如果是現在你的data是0

148
00:07:42,005 --> 00:07:44,015
那我就譬如說是低電位

149
00:07:44,015 --> 00:07:47,015
那如果是data是1 我就比較高的電位

150
00:07:47,015 --> 00:07:49,048
我就靠那個電位來判斷他是1或0

151
00:07:49,048 --> 00:07:53,018
但是我們在傳輸的時候有一個很重要的問題就是說

152
00:07:53,018 --> 00:07:55,098
我傳輸的兩台電腦都是獨立的電腦

153
00:07:55,098 --> 00:08:00,028
所以我用多快的速度把這個資料送上去

154
00:08:00,028 --> 00:08:04,018
那對方就應該用多快的速度把它收下來

155
00:08:04,018 --> 00:08:06,008
就是兩邊我們叫做要同步

156
00:08:06,008 --> 00:08:08,075
譬如說我送的很快 你收得很慢

157
00:08:08,075 --> 00:08:11,015
那我本來送 譬如說我送四個bits

158
00:08:11,015 --> 00:08:13,041
那妳看成兩個bits 就錯掉了

159
00:08:13,041 --> 00:08:16,015
就我送四個bits變成你就應該看四個bits

160
00:08:16,015 --> 00:08:18,085
我送一百個bits你就應該看一百個bits

161
00:08:18,085 --> 00:08:20,068
那我們這個要同步啊

162
00:08:20,068 --> 00:08:22,051
但是我們有一個實際的問題就是說

163
00:08:22,051 --> 00:08:25,001
兩台電腦之間 他的clock

164
00:08:25,001 --> 00:08:27,065
就是我們一般電腦裡面都有cpu都有clock

165
00:08:27,065 --> 00:08:31,008
這兩台電腦之間的clock呢 因為是獨立的電腦系統

166
00:08:31,008 --> 00:08:33,031
獨立的那個clock的就我們講

167
00:08:33,031 --> 00:08:35,051
譬如說石英振盪器 都是獨立的

168
00:08:35,051 --> 00:08:40,018
所以呢他們的這個時間的clock不一定會同步

169
00:08:40,018 --> 00:08:42,028
那不一定同步就很麻煩啊

170
00:08:42,028 --> 00:08:45,045
就我送出去的時候跟對方收的時候可能就會

171
00:08:45,045 --> 00:08:46,045
因為沒有同步

172
00:08:46,045 --> 00:08:48,081
會有誤差啦 就會判斷錯誤

173
00:08:48,081 --> 00:08:50,035
所以有一個技術就是說

174
00:08:50,035 --> 00:08:55,045
我如果把資料送上去 同時要把我的clock也送上去

175
00:08:55,045 --> 00:08:58,035
就是我要把我的這個所謂的時脈

176
00:08:58,035 --> 00:09:00,045
 我們的clock呢送上去給對方

177
00:09:00,045 --> 00:09:02,088
那對方依據這個clock來接收

178
00:09:02,088 --> 00:09:04,058
那這個做法有很多種

179
00:09:04,058 --> 00:09:08,028
那這個ethernet用了這裡所謂的Manchester encoding

180
00:09:08,028 --> 00:09:10,065
那Manchester encoding我們可以看一下

181
00:09:10,065 --> 00:09:12,041
他最大的特色在這個地方

182
00:09:12,041 --> 00:09:15,055
就是說他在每一個bit 也就是我們講

183
00:09:15,055 --> 00:09:19,035
因為我們在這個cable上面送的資料都是binary

184
00:09:19,035 --> 00:09:20,095
就是一個bit一個bit送

185
00:09:20,095 --> 00:09:23,011
就是一個bit 一個一個bit這樣

186
00:09:23,011 --> 00:09:24,035
一個接一個 一個接一個

187
00:09:24,035 --> 00:09:29,005
那每一個bit呢 我們都會有一個所謂的時間的寬度

188
00:09:29,005 --> 00:09:31,058
這個跟我們的傳輸速度有關

189
00:09:31,058 --> 00:09:34,088
譬如說10Mb 那就是代表說

190
00:09:34,088 --> 00:09:39,051
10Mbps嘛 一秒鐘要送10個Mb

191
00:09:39,051 --> 00:09:41,048
就是一千萬個bits

192
00:09:41,048 --> 00:09:46,008
那一個bit呢他的寬度就是十的七次方分之一嘛

193
00:09:46,008 --> 00:09:50,045
那如果你是100Mb 那就是十的八次方分之一

194
00:09:50,045 --> 00:09:54,091
就是你速度越快 每一個bit的時間就越短

195
00:09:54,091 --> 00:09:58,058
那如果說我們送的假設我送的資料全部都是0

196
00:09:58,058 --> 00:10:02,078
代表說我在cable上面呢 訊號通通都是0啦

197
00:10:02,078 --> 00:10:07,065
那我的封包很長 譬如說一萬兩千個bits 通通都是0

198
00:10:07,065 --> 00:10:10,078
那對方就不知道我的速度到底有多快

199
00:10:10,078 --> 00:10:12,031
因為我的訊號沒有變化

200
00:10:12,031 --> 00:10:16,028
他就不知道他到底要用多快的速度來取樣

201
00:10:16,028 --> 00:10:17,075
這是一個很大的問題

202
00:10:17,075 --> 00:10:18,095
那另外一個問題就是說

203
00:10:18,095 --> 00:10:21,081
那萬一我的data全部都是1 就是高電位嘛

204
00:10:21,081 --> 00:10:26,038
那一萬兩千個bits都是高電位 都是1 那對我來看

205
00:10:26,038 --> 00:10:28,055
我也不知道 對receiver來看

206
00:10:28,055 --> 00:10:30,041
他也不知道這到底有幾個bits啊

207
00:10:30,041 --> 00:10:33,071
因為通通都是1 他也不知道到底有幾個bit

208
00:10:33,071 --> 00:10:36,038
因為我們訊號沒有變化

209
00:10:36,038 --> 00:10:39,091
所以Manchester encoding呢就是要一種設計就是說

210
00:10:39,091 --> 00:10:41,095
不管你的data是0或者data是1

211
00:10:41,095 --> 00:10:44,098
我一定讓這個訊號呢有變化

212
00:10:44,098 --> 00:10:49,068
訊號的變化其實就隱藏了clock在裡面

213
00:10:49,068 --> 00:10:52,038
那這個clock就可以讓接收端呢

214
00:10:52,038 --> 00:10:55,028
用這個clock呢 來取樣你的data

215
00:10:55,028 --> 00:10:59,058
才可以正確的把你的data解讀出來 到底是1還是0

216
00:10:59,058 --> 00:11:01,048
好 那這個Manchester encoding呢

217
00:11:01,048 --> 00:11:04,038
他最大的特色就在這裡 我們注意看一下 你看

218
00:11:04,038 --> 00:11:06,085
他在這個1的時候

219
00:11:06,085 --> 00:11:10,011
就是我的data如果是1的話呢

220
00:11:10,011 --> 00:11:11,065
我在這個一個bit的中間

221
00:11:11,065 --> 00:11:13,075
他一定會有一個transition

222
00:11:13,075 --> 00:11:16,005
我們說 像這個地方 這個叫transition

223
00:11:16,005 --> 00:11:18,028
由low到high 這個transition

224
00:11:18,028 --> 00:11:22,011
那如果你是0的話呢 像這個bit是0

225
00:11:22,011 --> 00:11:24,001
那他就由high到low

226
00:11:24,001 --> 00:11:26,058
如果我們注意看這個就是說

227
00:11:26,058 --> 00:11:29,031
不管我們的data是1還是0

228
00:11:29,031 --> 00:11:34,085
我在一個bit的中間 他一定有電位的變化

229
00:11:34,085 --> 00:11:36,038
不管是 我們講

230
00:11:36,038 --> 00:11:38,085
如果是1就是low變到high

231
00:11:38,085 --> 00:11:40,085
如果是0就是high變到low

232
00:11:40,085 --> 00:11:44,015
所以你看一下 像這個1

233
00:11:44,015 --> 00:11:49,018
都是low變到high low變到high low變到high

234
00:11:49,018 --> 00:11:51,025
如果是零的話呢 就是在中間呢

235
00:11:51,025 --> 00:11:54,005
變成high變到low 由high到low這樣子

236
00:11:54,005 --> 00:11:56,005
所以變成說 你可以想像看

237
00:11:56,005 --> 00:12:00,065
如果我全部都是1 就是我就會變成一個正方形波啦

238
00:12:00,065 --> 00:12:03,081
如果我全部都是0 我也會變成一個方型波

239
00:12:03,081 --> 00:12:07,081
變成說不管我們的data有多少個1有多少個0

240
00:12:07,081 --> 00:12:12,068
我一定會有變化 那有這樣的變化呢 就可以讓接收端

241
00:12:12,068 --> 00:12:15,051
根據這個變化知道說 你變化的速度

242
00:12:15,051 --> 00:12:18,075
因為任何的變化 就代表著clock在裡面

243
00:12:18,075 --> 00:12:22,035
那我用這個clock 再回過頭來來抓這個data的時候呢

244
00:12:22,035 --> 00:12:23,055
我就會正確收到

245
00:12:23,055 --> 00:12:28,055
所以ethernet這個Manchester encoding是非常有名的

246
00:12:28,055 --> 00:12:33,015
就是說我們在這個cable上面 我把訊號送出去的時候

247
00:12:33,015 --> 00:12:36,085
事實上我要送的是1010

248
00:12:36,085 --> 00:12:40,001
但是我讓他的電位再會有一個變化

249
00:12:40,001 --> 00:12:43,018
就是不管我的data是1還是0

250
00:12:43,018 --> 00:12:46,031
他在每一個bit的中間都會有變化

251
00:12:46,031 --> 00:12:51,015
那這樣我即使送很長的連續的1 或者很長的連續的0

252
00:12:51,015 --> 00:12:54,048
都沒有關係 我的訊號都會一直有變化

253
00:12:54,048 --> 00:12:58,021
等於像我的clock就非常非常的跟對方可以做同步

254
00:12:58,021 --> 00:13:01,021
好 那我們再來看一下 就是說

255
00:13:01,021 --> 00:13:07,011
剛剛有提到說 這種10base5本身 一段呢是五百公尺

256
00:13:07,011 --> 00:13:10,091
那可是我們可能因為地理的這個環境

257
00:13:10,091 --> 00:13:12,005
這個區域比較大

258
00:13:12,005 --> 00:13:16,001
五百公尺呢你沒有辦法涵蓋這個整個區域的話呢

259
00:13:16,001 --> 00:13:19,078
我們就可以用一種設備呢 叫做所謂的repeater

260
00:13:19,078 --> 00:13:23,068
這個repeater呢 就相當於我們講所謂的repeat嘛

261
00:13:23,068 --> 00:13:29,018
把我的訊號給重新repeat一次

262
00:13:29,018 --> 00:13:32,011
那這個repeat是怎麼repeat方法呢

263
00:13:32,011 --> 00:13:33,081
是這樣子 就是說假設呢

264
00:13:33,081 --> 00:13:37,008
我們把這個當成repeater 這是repeater假設

265
00:13:37,008 --> 00:13:39,065
那我一個訊號這樣子進到這邊

266
00:13:39,065 --> 00:13:45,001
因為repeat他的接法通常都是接在所謂的

267
00:13:45,001 --> 00:13:48,078
等於說一個網段快結束了啦

268
00:13:48,078 --> 00:13:53,051
代表說你一個網段的話通常大概是五百公尺嘛 剛剛提到

269
00:13:53,051 --> 00:13:57,095
所以我的訊號在這個一個網段送了五百公尺之後呢

270
00:13:57,095 --> 00:14:00,061
我的訊號基本上已經有點衰減了

271
00:14:00,061 --> 00:14:04,011
剛剛講 我們雖然把它變成Manchester encoding

272
00:14:04,011 --> 00:14:07,021
每一個bit呢會有高低高低會有變化

273
00:14:07,021 --> 00:14:09,048
但是因為他有雜訊的干擾

274
00:14:09,048 --> 00:14:11,035
雖然你有高低的變化

275
00:14:11,035 --> 00:14:14,008
可是我的訊號呢會有一點我們叫distortion

276
00:14:14,008 --> 00:14:18,075
會有一點失真啦 等於說我那個波形會有點彎彎曲曲啦

277
00:14:18,075 --> 00:14:22,088
比較沒有這麼像正方波那麼漂亮 因為他會慢慢的衰減

278
00:14:22,088 --> 00:14:26,021
那我收到之後 假設我是repeater

279
00:14:26,021 --> 00:14:28,091
那我收到之後我至少還能夠判斷

280
00:14:28,091 --> 00:14:32,088
他是1還是0 只要我能夠判斷他是1還是0

281
00:14:32,088 --> 00:14:35,048
所以我從這邊進來 再出去的時候呢

282
00:14:35,048 --> 00:14:38,015
我就把它變成原來的方波

283
00:14:38,015 --> 00:14:41,081
就是這邊 我收到的訊號可能因為有衰減因為有失真

284
00:14:41,081 --> 00:14:44,065
其實那個波形已經不太漂亮

285
00:14:44,065 --> 00:14:47,058
但是我因為知道他還是1

286
00:14:47,058 --> 00:14:50,058
我能夠辨認出啦他到底是1還是0

287
00:14:50,058 --> 00:14:52,021
所以我出去的時候呢

288
00:14:52,021 --> 00:14:55,078
就會恢復他原來的這個 比較漂亮的這個波形

289
00:14:55,078 --> 00:14:59,085
就相當於剛開始送出來的這個 訊號比較強的波形

290
00:14:59,085 --> 00:15:01,055
所以repeater本身

291
00:15:01,055 --> 00:15:05,031
我們說他是一個設備 那他本身是會forward的

292
00:15:05,031 --> 00:15:08,068
他會轉送所謂的digital的這種所謂的signal

293
00:15:08,068 --> 00:15:11,065
那digital的signal就是剛剛講數位的訊號

294
00:15:11,065 --> 00:15:15,058
那這個數位的訊號就是1或0的這個所謂的波形啦

295
00:15:15,058 --> 00:15:17,075
就是說我們可能原來的訊號呢

296
00:15:17,075 --> 00:15:19,055
譬如說這個repeater本身

297
00:15:19,055 --> 00:15:22,038
他假設我們這個地方是一個repeater

298
00:15:22,038 --> 00:15:24,011
那這個進來的時候

299
00:15:24,011 --> 00:15:27,051
可能波形已經有點這樣不是很漂亮啦

300
00:15:27,051 --> 00:15:32,058
那出去的時候呢 我們讓他變成所謂的方形波

301
00:15:32,058 --> 00:15:35,061
讓他變得比較又完整的波

302
00:15:35,061 --> 00:15:38,015
又可以再跑更遠一點啦

303
00:15:38,015 --> 00:15:39,085
也就是說那這樣理論上

304
00:15:39,085 --> 00:15:44,058
我們只要訊號衰減到一個程度 我們就加上repeater

305
00:15:44,058 --> 00:15:47,071
那我們就可以再 譬如說這樣就可以又送五百公尺啊

306
00:15:47,071 --> 00:15:51,051
那如果說 在五百公尺之後呢又衰減

307
00:15:51,051 --> 00:15:54,068
我再加一個repeater 我又可以加五百公尺啦

308
00:15:54,068 --> 00:15:56,065
所以理論上可以變成說

309
00:15:56,065 --> 00:16:01,051
我可以用很多的repeater一直把訊號從這個衰減當中呢

310
00:16:01,051 --> 00:16:04,098
再把她補救回來 我就可以接很長很長

311
00:16:04,098 --> 00:16:06,038
理論上是這樣子啦

312
00:16:06,038 --> 00:16:09,051
但是呢我們實際上呢不可以這樣子設計

313
00:16:09,051 --> 00:16:11,051
我們實際上的設計有另外的考量

314
00:16:11,051 --> 00:16:14,021
就是說因為考慮到 我們後面會解釋

315
00:16:14,021 --> 00:16:18,085
這個整個通訊協定的這個所謂的他的效率啦

316
00:16:18,085 --> 00:16:25,061
我們會說 在ethernet上面呢最多是經過四個repeater

317
00:16:25,061 --> 00:16:28,095
就是我們整個網路最多最多

318
00:16:28,095 --> 00:16:34,011
就是兩個電腦之間 我們不管怎麼連

319
00:16:34,011 --> 00:16:36,041
我經過的這個線路呢

320
00:16:36,041 --> 00:16:40,041
最多有四個repeater 那這樣就是說

321
00:16:40,041 --> 00:16:42,018
一個ethernet本身 我們說

322
00:16:42,018 --> 00:16:47,071
他最多就是2500公尺 就是2.5公里

323
00:16:47,071 --> 00:16:52,095
那2.5公里的範圍對我們一般區域網路來講就足夠了啦

324
00:16:52,095 --> 00:16:54,095
因為2.5公里應該夠長了

325
00:16:54,095 --> 00:16:58,005
好所以我們說 如果有repeater的話呢

326
00:16:58,005 --> 00:17:01,015
像在這個地方 我們repeater看一下

327
00:17:05,008 --> 00:17:08,015
repeater呢在這個地方

328
00:17:08,015 --> 00:17:10,048
那我們就是說 我們這樣的話

329
00:17:10,048 --> 00:17:12,078
變成說我上面這一段呢是五百公尺

330
00:17:12,078 --> 00:17:14,085
下面這一段呢是五百公尺

331
00:17:14,085 --> 00:17:17,038
也就是這兩個電腦之間

332
00:17:17,038 --> 00:17:19,088
就是這個電腦跟這個電腦之間

333
00:17:19,088 --> 00:17:22,071
我就可以走這一條 這樣子

334
00:17:22,071 --> 00:17:25,081
經過repeater 再把訊號還原這樣子

335
00:17:25,081 --> 00:17:29,031
那我們這中間就相當於可以走一公里了嘛

336
00:17:29,031 --> 00:17:33,018
就是我靠一個repeater 可以把兩個網段接起來

337
00:17:33,018 --> 00:17:35,071
那我就可以有一公里

338
00:17:35,071 --> 00:17:39,011
那這是用一個repeater接兩個網段

339
00:17:39,011 --> 00:17:42,051
但是我們還可以 甚至接的更多

340
00:17:42,051 --> 00:17:44,005
那我們剛剛有提到說

341
00:17:44,005 --> 00:17:46,031
在這個ethernet的標準裡面

342
00:17:46,031 --> 00:17:48,071
他最多最多就是用五個網段

343
00:17:48,071 --> 00:17:51,071
就像這樣子的圖 那這五個網段裡面

344
00:17:51,071 --> 00:17:56,005
每一個網段都是五百公尺 那我們來看一下

345
00:17:56,005 --> 00:17:59,098
在這個五個網段裡面呢 他最長最長的距離

346
00:17:59,098 --> 00:18:02,061
就像我們這個紅色地方所畫出來的

347
00:18:02,061 --> 00:18:03,085
就是說我可能會經過

348
00:18:03,085 --> 00:18:08,015
sorry我把它收起來一下

349
00:18:08,015 --> 00:18:11,051
就我們會經過幾個網段呢

350
00:18:11,051 --> 00:18:15,038
我們看一下 首先會經過這是第一個網段

351
00:18:15,038 --> 00:18:19,058
阿中間這個第二個網段 這個是第三個網段

352
00:18:19,058 --> 00:18:23,065
那這個就已經三個網段 三個網段就一千五百公尺了

353
00:18:23,065 --> 00:18:26,071
可是我們這個repeater呢還有另外一種設計

354
00:18:26,071 --> 00:18:28,061
就是我們叫做half repeater

355
00:18:28,061 --> 00:18:31,065
就是repeater本身本來就一個設備啦

356
00:18:31,065 --> 00:18:34,045
那可是 所謂的half repeater就是說

357
00:18:34,045 --> 00:18:36,045
我把這個設備 有點把它拆兩半

358
00:18:36,045 --> 00:18:39,055
因為我的距離比較 譬如說我兩棟建築物嘛

359
00:18:39,055 --> 00:18:43,011
兩棟建築物本身 我可以用這個東西

360
00:18:43,011 --> 00:18:47,051
類似兩個這個東西中間 再用專用的線路把他接起來

361
00:18:47,051 --> 00:18:50,085
就是中間這一條 我們叫做half repeater

362
00:18:50,085 --> 00:18:53,065
他中間這個線路的長度呢大概是一公尺

363
00:18:53,065 --> 00:18:57,091
所以整個這樣子加起來 對不起是一公里

364
00:18:57,091 --> 00:19:00,041
所以整個加起來就相當於是2.5公里

365
00:19:00,041 --> 00:19:03,008
所以我們 說他的2.5公里

366
00:19:03,008 --> 00:19:08,065
就相當於是從最遠的這一端 到最遠的這一端

367
00:19:08,065 --> 00:19:12,045
那我們這中間這個路徑 大概就經過

368
00:19:12,045 --> 00:19:14,041
最長最長就是2.5公里

369
00:19:14,041 --> 00:19:17,091
所以在這個ethernet 10base5底下

370
00:19:17,091 --> 00:19:21,055
我們說 他的這種網路的這個結構呢

371
00:19:21,055 --> 00:19:25,025
最多就是用五個segment

372
00:19:25,025 --> 00:19:27,038
這五個segment的連接方式呢

373
00:19:27,038 --> 00:19:31,001
就相當於這個圖所顯示的連接方式

374
00:19:31,001 --> 00:19:33,008
那這個圖連接方式呢

375
00:19:33,008 --> 00:19:38,025
最多就是可以走到五公里的這個距離啦

376
00:19:38,025 --> 00:19:41,031
相當於就是走這一條路 這樣子

377
00:19:42,035 --> 00:19:45,095
最遠最遠這樣子啦 就差不多2.5公里

378
00:19:45,095 --> 00:19:52,048
這是我們講這個10base5最長就是2.5公里

379
00:19:52,048 --> 00:19:55,068
這個2.5公里呢 是一個很重要的參數

380
00:19:55,068 --> 00:19:58,085
這個是我們後面還會再用到的一個

381
00:19:58,085 --> 00:20:02,011
所謂的round-trip delay 我們後面會用到就是說

382
00:20:02,011 --> 00:20:05,001
我們會考慮到是說 那這個訊號

383
00:20:05,001 --> 00:20:09,001
從譬如說從這個左上角送到這個右下角

384
00:20:09,001 --> 00:20:12,031
他這個訊號到底要跑多久

385
00:20:12,031 --> 00:20:15,018
這個跟我們都非常相關 我們後面會用到就是說

386
00:20:15,018 --> 00:20:17,055
我的訊號送上去之後他就沿著這個路徑

387
00:20:17,055 --> 00:20:19,068
跑跑跑跑到最這邊來

388
00:20:19,068 --> 00:20:21,075
好啦最後再跑回來這樣子

389
00:20:21,075 --> 00:20:24,095
感覺說他一個來回的時間

390
00:20:24,095 --> 00:20:26,058
我們叫做round-trip time

391
00:20:26,058 --> 00:20:29,061
這跟我們後面要講的這個CSMA/CD呢

392
00:20:29,061 --> 00:20:31,038
是息息相關的

393
00:20:31,038 --> 00:20:33,038


