2
00:00:00,000 --> 00:00:03,780
那現在我們來跟各位介紹

3
00:00:03,780 --> 00:00:09,050
一般的企業升級IPv6的話他可以注意的一些事情

4
00:00:09,050 --> 00:00:10,380
那我們來看一下說

5
00:00:10,380 --> 00:00:15,950
因為目前大部分的伺服器的作業系統 就所謂的OS

6
00:00:15,950 --> 00:00:21,710
那他還有應用軟體在導入IPv6的時候 到底要注意哪些事情

7
00:00:21,710 --> 00:00:26,380
那我們說現在大部分的這種windows的web server

8
00:00:26,380 --> 00:00:31,180
就是IIS很多版本都開始支援這個IPv6

9
00:00:31,180 --> 00:00:33,550
這邊是一個很簡單的一個表

10
00:00:33,550 --> 00:00:37,450
譬如說Windows 2000它就不支援IPv6

11
00:00:37,450 --> 00:00:42,410
那從Windows 2003開始他就支援IPv6

12
00:00:42,410 --> 00:00:46,510
那2008也支援 2012也都支援IPv6

13
00:00:46,510 --> 00:00:51,980
而且其中2008跟2013他已經支援這個所謂的圖形介面

14
00:00:51,980 --> 00:00:56,910
也就是說它可以用圖形介面來提供IPv6的設定

15
00:00:56,910 --> 00:00:58,710
就不用用command line

16
00:00:58,710 --> 00:01:01,450
變成說他有一個GUI 比較容易的設定

17
00:01:01,450 --> 00:01:06,580
這個也是讓IPv6的設定跟管理也是更方便

18
00:01:06,580 --> 00:01:09,580
這個Windows的作業系統也提供

19
00:01:09,580 --> 00:01:12,209
那另外如果從Web server來看的話

20
00:01:12,209 --> 00:01:15,910
我們知道Linux的Web server Apache是最常用的

21
00:01:15,910 --> 00:01:20,650
我們說Apache是Unix-like OS裡面

22
00:01:20,650 --> 00:01:22,209
最常見的Web server

23
00:01:22,209 --> 00:01:27,680
那其中Apache在1.3版就已經開始支援IPv6

24
00:01:27,680 --> 00:01:30,650
那到2.0版的時候

25
00:01:30,650 --> 00:01:33,950
他已經預設並啟動IPv6的Dual-Stack

26
00:01:33,950 --> 00:01:36,550
就是說Apache 2.0版

27
00:01:36,550 --> 00:01:40,480
IPv4 IPv6 這個Dual-Stack就已經是內建

28
00:01:40,480 --> 00:01:42,410
而且是預設就會啟動

29
00:01:42,410 --> 00:01:48,250
那如果說我們看CentOS在5.3版以上的Apache

30
00:01:48,250 --> 00:01:50,750
他也是都有支援這個Dual-Stack

31
00:01:50,750 --> 00:01:54,349
這個是在作業系統還有Web server

32
00:01:54,349 --> 00:01:57,580
就已經開始都已經支援IPv6

33
00:01:57,580 --> 00:01:59,349
我們再來看一下

34
00:01:59,349 --> 00:02:05,180
那如果是網頁程式怎麼讓他支援IPv6

35
00:02:05,180 --> 00:02:08,949
就是說網頁程式要讓他支援IPv6

36
00:02:08,949 --> 00:02:12,150
就是我們可能需要修改網頁的程式

37
00:02:12,150 --> 00:02:17,949
一般我們的網頁程式常常會譬如說裡面有IPv4的位置

38
00:02:17,949 --> 00:02:21,580
那我們在修改的時候就盡量避免說

39
00:02:21,580 --> 00:02:24,479
只支援這個v4

40
00:02:24,479 --> 00:02:27,009
我們需要修改成

41
00:02:27,009 --> 00:02:31,780
可以支援v4跟v6所謂的雙協定程式語法

42
00:02:31,780 --> 00:02:35,110
就是說在修改這個網頁程式的時候

43
00:02:35,110 --> 00:02:39,180
一定要讓他變成說 可以同時支援v4跟v6

44
00:02:39,180 --> 00:02:43,080
那這個裡面一個很重要的所謂的訣竅就是說

45
00:02:43,080 --> 00:02:46,180
我們的網頁的這個link 我們用domain name

46
00:02:46,180 --> 00:02:51,150
domain name 就像www點什麼什麼這樣子

47
00:02:51,150 --> 00:02:54,280
不要用IP的位置

48
00:02:54,280 --> 00:03:01,710
因為IP位置一寫下去 他以後換成v4 v6就很難...

49
00:03:01,710 --> 00:03:04,380
就需要重新再寫過的意思

50
00:03:04,380 --> 00:03:06,650
如果你用domain name 你就可以換

51
00:03:06,650 --> 00:03:10,080
因為你的每次他在需要的時候

52
00:03:10,080 --> 00:03:11,849
他會到domain name server去查詢

53
00:03:11,849 --> 00:03:14,009
所以我們在domain name server那邊只要

54
00:03:14,009 --> 00:03:15,150
譬如說我們更換IP

55
00:03:15,150 --> 00:03:18,110
只要到Domain name server那邊去做一個註冊

56
00:03:18,110 --> 00:03:20,710
我們就可以換不同的IP

57
00:03:20,710 --> 00:03:25,410
那如果說我們在網頁程式裡面用IP位置 就寫死的意思

58
00:03:25,410 --> 00:03:28,349
那你將來換IP的話就是很麻煩

59
00:03:28,349 --> 00:03:29,449
那另外就是說

60
00:03:29,449 --> 00:03:33,210
只要是儲存IP位置的資料庫

61
00:03:33,210 --> 00:03:43,250
或者是我們需要來讓使用者提供網址的這種操作介面

62
00:03:43,250 --> 00:03:46,150
你希望使用者輸入一些網址的話

63
00:03:46,150 --> 00:03:50,410
那盡量都要改成說可以支援IPv6位置的格式

64
00:03:50,410 --> 00:03:56,550
就輸入這個網址的話可以輸入IPv4的也可以輸入IPv6的

65
00:03:56,550 --> 00:03:59,210
那我們說依照這個程式語言

66
00:03:59,210 --> 00:04:03,280
不同的language我們簡單來看底下的這個說明

67
00:04:03,280 --> 00:04:07,910
我們說如果是網頁前端的程式要導入IPv6

68
00:04:07,910 --> 00:04:13,110
那我們知道網頁的前端程式最有名是HTML

69
00:04:13,110 --> 00:04:16,850
那HTML本身也都提供裡面的超連結

70
00:04:16,850 --> 00:04:21,079
那如果我們是以IPv4網址為連結的話

71
00:04:21,079 --> 00:04:27,180
之前的話 舊的 那建議可以改為用domain name的方式

72
00:04:27,180 --> 00:04:30,180
那增加這個轉移的彈性

73
00:04:30,180 --> 00:04:34,310
就是說不要把v4的位置改成v6的位置

74
00:04:34,310 --> 00:04:37,279
那也是沒有彈性 把它改成domain name的方式

75
00:04:37,279 --> 00:04:42,709
那將來在網址所謂的變更或者替換的時候

76
00:04:42,709 --> 00:04:46,449
因為有domain name 所以相對的都會比較簡單一點點

77
00:04:46,449 --> 00:04:50,779
那我們看 如果是ASP的話 那ASP本身

78
00:04:50,779 --> 00:04:54,110
我們說這個語言本身可以用下列的語法

79
00:04:54,110 --> 00:04:56,980
可以取得客戶端的IP的位置

80
00:04:56,980 --> 00:05:00,949
這個包含可以同時支援v4跟v6

81
00:05:00,949 --> 00:05:05,079
也就是說利用這個叫Request Server Variables

82
00:05:05,079 --> 00:05:07,209
裡面的Remote address

83
00:05:07,209 --> 00:05:10,910
你就可以取得用戶端的位置

84
00:05:10,910 --> 00:05:13,680
包含是他的v4位置跟v6位置

85
00:05:13,680 --> 00:05:18,149
那你就知道說你的用戶端他的v6是什麼位置

86
00:05:18,149 --> 00:05:20,380
這樣你寫起來就會比較簡單一點

87
00:05:20,380 --> 00:05:23,380
那譬如說ASP 我們講.net

88
00:05:23,380 --> 00:05:27,209
那.net也是一樣 如果你想要取得用戶端

89
00:05:27,209 --> 00:05:30,480
就是客戶他的v6的位置的話

90
00:05:30,480 --> 00:05:34,750
一樣 可以用這個Response Write 然後這個

91
00:05:34,750 --> 00:05:39,310
他也會得到客戶端的v4跟v6的位置

92
00:05:39,310 --> 00:05:43,350
那如果是所謂的JSP的話 JavaScript的話

93
00:05:43,350 --> 00:05:48,550
一樣 他也是用這個request.getRemote.Addr

94
00:05:48,550 --> 00:05:50,350
getRemote.Host

95
00:05:50,350 --> 00:05:53,449
這樣的話他可以取得用戶端的

96
00:05:53,449 --> 00:05:57,449
所謂的他的IPv4位置跟IPv6位置

97
00:05:57,449 --> 00:06:00,949
那你的程式本身你就可以透過這些

98
00:06:00,949 --> 00:06:05,850
所謂的呼叫 那你就可以去支援IPv6

99
00:06:05,850 --> 00:06:09,680
因為你用戶端這邊的位置 v6位置他就可以取得

100
00:06:09,680 --> 00:06:12,610
那就可以進一步的根據他的v6位置

101
00:06:12,610 --> 00:06:15,649
處理他的一些所謂的需求

102
00:06:15,649 --> 00:06:18,180
還有這個整個作業的流程

103
00:06:18,180 --> 00:06:22,050
那我們看後端 剛剛介紹是前端

104
00:06:22,050 --> 00:06:26,949
那我們說網頁後端的程式如果要導入v6的話

105
00:06:26,949 --> 00:06:28,279
我們來怎麼來做

106
00:06:28,279 --> 00:06:30,910
那最常看到的是PHP

107
00:06:30,910 --> 00:06:33,910
因為PHP是我們一般網頁後端程式

108
00:06:33,910 --> 00:06:35,750
最常用的這個language

109
00:06:35,750 --> 00:06:38,480
一樣 那如果是後端來講的話

110
00:06:38,480 --> 00:06:42,910
PHP本身我們必須把IPv4的網址改成Domain name

111
00:06:42,910 --> 00:06:46,709
一樣 把那個v4的網址改成domain name的方式

112
00:06:46,709 --> 00:06:49,779
所以在PHP的程式設計裡面

113
00:06:49,779 --> 00:06:52,079
我們常常也是網路存取

114
00:06:52,079 --> 00:06:57,110
需要獲得我們講使用者的IP位置的函數

115
00:06:57,110 --> 00:06:59,750
就像server remote address

116
00:06:59,750 --> 00:07:01,779
那這個也是一樣 他也可以

117
00:07:01,779 --> 00:07:03,779
現在大家也都已經升級

118
00:07:03,779 --> 00:07:09,410
可以同時取得所謂的使用者的v4的位置跟v6的位置

119
00:07:09,410 --> 00:07:13,910
那最後 如果是其他的程式 像C或C++的話

120
00:07:13,910 --> 00:07:16,649
我們可以用像這個功能

121
00:07:16,649 --> 00:07:22,009
叫inet_ntop 或 inet_pton

122
00:07:22,009 --> 00:07:26,050
那這個就可以把v4跟v6的網址

123
00:07:26,050 --> 00:07:29,579
做一個同時支援 可以同時做一個轉換

124
00:07:29,579 --> 00:07:35,110
那這個是常看到的在網頁後端如果要支援IPv6

125
00:07:35,110 --> 00:07:39,910
我們在這個導入的時候可以注意的這個地方

126
00:07:39,910 --> 00:07:42,009
那還有一個就是說

127
00:07:42,009 --> 00:07:45,949
我們在發展程式的時候盡量發展跟

128
00:07:45,949 --> 00:07:49,850
我們說跟IP版本無關的程式碼

129
00:07:49,850 --> 00:07:54,350
因為我們可能會在後端這邊設計資料結構

130
00:07:54,350 --> 00:07:58,310
或者設計一些所謂的跟IP位置有關的地方

131
00:07:58,310 --> 00:08:00,750
但是盡量不要跟版本

132
00:08:00,750 --> 00:08:03,779
不要說他是v4或者v6

133
00:08:03,779 --> 00:08:10,050
也就是說盡量設計成我不管是v4或者v6我都可以

134
00:08:10,050 --> 00:08:11,610
就把他當成就是一個位置

135
00:08:11,610 --> 00:08:15,980
然後不管他是v4位置還是v6位置你都可以吃進來

136
00:08:15,980 --> 00:08:19,709
那這樣的話使用譬如說independent的structure

137
00:08:19,709 --> 00:08:25,709
就盡量讓他的結構不要跟v4或v6綁的太緊

138
00:08:25,709 --> 00:08:28,149
那我們也可以用一些工具來檢查說

139
00:08:28,149 --> 00:08:34,309
你的程式裡面到底有哪些是跟v4或v6網址綁的很緊

140
00:08:34,309 --> 00:08:37,380
譬如說可以去下載這個叫做checkv4

141
00:08:37,380 --> 00:08:41,250
或者PortToIPv6的這樣的程式

142
00:08:41,250 --> 00:08:44,580
那這個程式本身他會幫我們檢查我們的程式

143
00:08:44,580 --> 00:08:46,950
看看說你這個程式裡面

144
00:08:46,950 --> 00:08:52,049
有哪些地方你是用IPv4的位置 就寫死的位置的意思

145
00:08:52,049 --> 00:08:56,809
那這個東西你就要把它改成跟版本沒有關

146
00:08:56,809 --> 00:08:57,950
譬如改成domain name

147
00:08:57,950 --> 00:09:02,480
那如果說像這個PortToIPv6也是類似

148
00:09:02,480 --> 00:09:03,809
他會檢查我們的程式裡面

149
00:09:03,809 --> 00:09:07,750
是不是有一些位置是跟版本有關的

150
00:09:07,750 --> 00:09:10,509
那不管是v4或者v6 這個都盡量不要用

151
00:09:10,509 --> 00:09:12,450
把他變成一個domain name

152
00:09:12,450 --> 00:09:16,909
或者說至少設計成跟IP版本沒有關係

153
00:09:16,909 --> 00:09:18,149
那這樣你的程式以後

154
00:09:18,149 --> 00:09:23,850
不管你下面是啟動v4啟動v6 你就相容性就高一點

155
00:09:23,850 --> 00:09:31,950
那我們說這兩個程式他都可以檢查v4相關函數跟參數

156
00:09:31,950 --> 00:09:36,710
提供我們相對應的v6的函數可以來參考

157
00:09:36,710 --> 00:09:39,009
就是說我們檢查以後發現說

158
00:09:39,009 --> 00:09:42,679
你這裡面譬如你綁了v4的位置帶了什麼參數

159
00:09:42,679 --> 00:09:46,750
那我們當然就要把它改成相對應的v6的函數

160
00:09:46,750 --> 00:09:50,580
還有他的所謂的參數 這樣可以做一個對應

161
00:09:50,580 --> 00:09:55,309
但是不管怎麼樣 這種檢查的工具通常都會有一個限制

162
00:09:55,309 --> 00:09:58,480
譬如說這個檢查的工具本身它安裝的平台

163
00:09:58,480 --> 00:10:00,779
譬如他只能在Windows上面

164
00:10:00,779 --> 00:10:03,179
或者他只能在Linux上面

165
00:10:03,179 --> 00:10:08,350
就是說這些檢查的工具本身會有平台的限制

166
00:10:08,350 --> 00:10:10,850
還有他的程式語言也有一些限制

167
00:10:10,850 --> 00:10:14,610
譬如他只能檢查什麼樣語言的 寫的這個程式

168
00:10:14,610 --> 00:10:19,210
並不是說一個檢查的工具 所有的語言都可以檢查

169
00:10:19,210 --> 00:10:22,110
或者所有的這個作業系統他都可以執行

170
00:10:22,110 --> 00:10:24,250
畢竟還是有一些限制啦

171
00:10:24,250 --> 00:10:27,580
也就是說這些結果僅供參考

172
00:10:27,580 --> 00:10:31,049
不一定能夠找到所有必須修改的地方

173
00:10:31,049 --> 00:10:34,909
也就是說我們還是要藉由這個工具來做檢查

174
00:10:34,909 --> 00:10:37,610
是一步算是補強的工作

175
00:10:37,610 --> 00:10:42,049
但是不能只靠這個工具來檢查說我們的程式

176
00:10:42,049 --> 00:10:48,279
在支援IPv6是不是都非常的完整

177
00:10:48,279 --> 00:10:49,779
這個是稍微注意的地方

178
00:10:49,779 --> 00:10:54,049
那我們說如果我們要導入IPv6的話

179
00:10:54,049 --> 00:10:56,250
有幾個注意的地方 包含是說

180
00:10:56,250 --> 00:11:00,580
因為我們的網路的伺服器的後台

181
00:11:00,580 --> 00:11:02,880
會有很多這個Plug-in

182
00:11:02,880 --> 00:11:06,880
一般我們的後台程式裡面會寫入很多這個插件

183
00:11:06,880 --> 00:11:11,080
那我們反映在實務上就是需要注意幾個重點

184
00:11:11,080 --> 00:11:14,980
第一個就是說 那我們這個電信商 就是ISP

185
00:11:14,980 --> 00:11:19,549
他的IPv6連線的狀態 到底是走v4還是走v6等等

186
00:11:19,549 --> 00:11:22,080
然後我們的系統的routing table

187
00:11:22,080 --> 00:11:25,880
因為我們現在既然可以有v4有v6

188
00:11:25,880 --> 00:11:27,880
那我們的routing一定會有兩個

189
00:11:27,880 --> 00:11:31,279
一個是routing table是針對v4的routing table

190
00:11:31,279 --> 00:11:34,279
一個是針對v6的routing table

191
00:11:34,279 --> 00:11:36,409
就我們會有不同的路由的這個表

192
00:11:36,409 --> 00:11:40,809
那到底哪一個是有開哪一個是有關

193
00:11:40,809 --> 00:11:43,210
這個狀態我們也要隨時注意到

194
00:11:43,210 --> 00:11:47,350
還有我們後台網路程式v6是不是有開啟

195
00:11:47,350 --> 00:11:49,809
就是說我們雖然有支援v6

196
00:11:49,809 --> 00:11:53,610
但是有沒有開啟 這個也是很重要的一部分

197
00:11:53,610 --> 00:11:56,980
還有就是我們網頁的前後台

198
00:11:56,980 --> 00:12:01,009
前台後台的程式我們的網址擷取問題

199
00:12:01,009 --> 00:12:04,279
就是說當我們需要去抓這個網址的時候

200
00:12:04,279 --> 00:12:07,210
我們是不是都可以抓v4也可以抓v6

201
00:12:07,210 --> 00:12:12,809
這個都是我們在導入IPv6的時候應該注意的事項

202
00:12:12,809 --> 00:12:15,110
譬如說我們在仔細看一下

203
00:12:15,110 --> 00:12:18,980
就是說像ISP的IPv6的連線狀態就是說

204
00:12:18,980 --> 00:12:22,110
因為大部分的系統現在都是Dual stack

205
00:12:22,110 --> 00:12:24,880
然後系統又會自動的啟動

206
00:12:24,880 --> 00:12:29,250
所以有可能發生說其實我們IPv6已經開通了

207
00:12:29,250 --> 00:12:31,350
但是我們的管理者可能不知情

208
00:12:31,350 --> 00:12:33,350
就是說它可能不知道

209
00:12:33,350 --> 00:12:37,610
因為Dual stack現在都已經算是內建

210
00:12:37,610 --> 00:12:38,779
而且會自動啟動

211
00:12:38,779 --> 00:12:41,580
所以我們一旦自動啟動 有v4有v6

212
00:12:41,580 --> 00:12:44,210
那我們都在管v4 都忘了管v6

213
00:12:44,210 --> 00:12:45,950
所以攻擊可能從v6進來

214
00:12:45,950 --> 00:12:49,009
那這個是要在導入v6的時候

215
00:12:49,009 --> 00:12:52,179
要注意到我們ISP的這個v6的連線狀態

216
00:12:52,179 --> 00:12:55,509
就是說v6開通了 我們必須知道

217
00:12:55,509 --> 00:12:58,509
那第二個剛剛提到所謂的routing table的狀態

218
00:12:58,509 --> 00:13:02,350
就是因為我們現在v4 v6都有

219
00:13:02,350 --> 00:13:03,909
所以我們所有的應用程式

220
00:13:03,909 --> 00:13:07,950
到底是我們講 是走v6還是走v4 我們必須知道

221
00:13:07,950 --> 00:13:09,950
因為我們有兩個routing table

222
00:13:09,950 --> 00:13:12,210
走v6 走v4都可以

223
00:13:12,210 --> 00:13:16,880
所以我們的應用程式到底是走v4還是走v6呢

224
00:13:16,880 --> 00:13:18,909
這個我們必須要確認

225
00:13:18,909 --> 00:13:23,179
免得說 你希望它走v6的結果它走v4

226
00:13:23,179 --> 00:13:27,149
那這樣你在安全的rule設定上可能會出問題

227
00:13:27,149 --> 00:13:31,149
剛剛提到說 對於後台的網路程式

228
00:13:31,149 --> 00:13:33,480
v6是否有開放

229
00:13:33,480 --> 00:13:39,179
也就是目前大部分的網路程式都支援IPv6

230
00:13:39,179 --> 00:13:43,509
那在導入的時候 那你IPv6有沒有打開

231
00:13:43,509 --> 00:13:45,210
這個也要額外的檢查

232
00:13:45,210 --> 00:13:48,710
就雖然有資源 可是可能沒有開 這個就沒有用

233
00:13:48,710 --> 00:13:50,250
所以這個要特別注意一下

234
00:13:50,250 --> 00:13:54,710
那最後這邊所謂的網頁的前台後台

235
00:13:54,710 --> 00:13:59,110
它程式在網址擷取的時候 要特別注意到

236
00:13:59,110 --> 00:14:02,750
譬如說以網頁來講 就假設我們設計一個網頁

237
00:14:02,750 --> 00:14:06,250
這個網頁假設我們需要截取使用者

238
00:14:06,250 --> 00:14:10,309
它的IP位置的程式的時候

239
00:14:10,309 --> 00:14:14,009
就是說我們如果有一個網頁的設計

240
00:14:14,009 --> 00:14:16,480
這個網頁本身它有擷取

241
00:14:16,480 --> 00:14:20,480
或者觀察使用者IP網址的程式的時候

242
00:14:20,480 --> 00:14:23,950
你要注意到它的這個語法

243
00:14:23,950 --> 00:14:25,950
還有它位置轉換的這個問題

244
00:14:25,950 --> 00:14:27,779
就它到底是v4還是v6

245
00:14:27,779 --> 00:14:29,250
還是v4 v6都可以

246
00:14:29,250 --> 00:14:33,380
因為你牽涉到這個使用者的IP網址的擷取

247
00:14:33,380 --> 00:14:35,850
所以你到底抓到是v4還是抓到的是v6

248
00:14:35,850 --> 00:14:37,350
還是兩邊都可以

249
00:14:37,350 --> 00:14:39,509
這個都是要特別注意的地方

250
00:14:39,509 --> 00:14:42,809
這些都是我們在導入IPv6的時候

251
00:14:42,809 --> 00:14:44,750
應該要注意的事項

252
00:14:44,750 --> 00:14:46,000
 Subtitles End: mo.dbxdb.com

