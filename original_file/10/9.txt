2
00:00:00,000 --> 00:00:03,640
好那我們首先來看一個 叫做SIIT

3
00:00:03,640 --> 00:00:09,720
SIIT呢全名叫做Stateless IP/ICMP Translation Algorithm

4
00:00:09,720 --> 00:00:14,580
就是說他主要是把IP跟ICMP的header

5
00:00:14,580 --> 00:00:19,580
就是v4跟v6的header 還有ICMP v4

6
00:00:19,580 --> 00:00:22,320
ICMP v6的header 直接做轉換

7
00:00:22,320 --> 00:00:24,400
那他為什麼叫做stateless呢

8
00:00:24,400 --> 00:00:26,600
也就是說這個轉換的過程當中

9
00:00:26,600 --> 00:00:30,740
不會記著過去的歷史 也就是說它是根據這個封包

10
00:00:30,740 --> 00:00:33,880
收到的封包直接轉換 跟過去怎麼轉啊

11
00:00:33,880 --> 00:00:35,360
歷史啊都沒有關係

12
00:00:35,360 --> 00:00:37,960
所以叫做stateless的IP/ICMP

13
00:00:37,960 --> 00:00:39,640
的translation的一個algorithm

14
00:00:39,640 --> 00:00:44,340
我們說這個SIIT呢它就要轉這個v6的header

15
00:00:44,340 --> 00:00:47,660
把它轉成v4的header 很簡單

16
00:00:47,660 --> 00:00:50,280
就是把v6的header轉成v4的header

17
00:00:52,280 --> 00:00:56,780
然後再把ICMP的header 把它轉成v4 v6

18
00:00:56,780 --> 00:00:57,560
這個都是互轉

19
00:00:57,560 --> 00:01:00,600
等於說它可以轉過去也可以轉過來

20
00:01:00,600 --> 00:01:04,680
也就是v6的header轉成v4的header或者倒過來

21
00:01:04,680 --> 00:01:07,819
或者ICMP的v6的header轉成ICMP

22
00:01:07,819 --> 00:01:10,340
v4的header 都一樣

23
00:01:10,340 --> 00:01:14,560
我們就可以讓一些v6的host呢

24
00:01:14,560 --> 00:01:19,720
它並沒有一個所謂的永久的v4的位置的話

25
00:01:19,720 --> 00:01:22,880
它還可以跟v4的網路溝通的意思

26
00:01:22,880 --> 00:01:29,880
也就是說我們讓一些沒有永久的v4位置的v6的這個host

27
00:01:29,880 --> 00:01:34,780
可以跟這個v4的這個host還是可以繼續的溝通

28
00:01:34,780 --> 00:01:39,900
所以呢 它不像在那個所謂的NAT一樣

29
00:01:39,900 --> 00:01:42,599
它並沒有記錄這個所謂的state的概念

30
00:01:42,599 --> 00:01:46,400
所以我們叫做stateless 那為什麼講說NAT呢

31
00:01:46,400 --> 00:01:50,440
因為NAT 我們知道說NAT本身你的封包

32
00:01:50,440 --> 00:01:53,239
穿過NAT就會留下一些

33
00:01:53,239 --> 00:01:56,319
比如說IP的對照表 還有port number

34
00:01:57,319 --> 00:02:01,000
然後NAT本身因為它有進有出嘛

35
00:02:01,000 --> 00:02:02,520
所以你穿過NAT的時候呢

36
00:02:02,520 --> 00:02:04,860
一定是有一個方向在一個方向

37
00:02:04,860 --> 00:02:08,060
所以他會記下來說你穿過去的時候你的

38
00:02:08,060 --> 00:02:09,840
private IP跟port number

39
00:02:09,840 --> 00:02:11,199
那那個就不叫stateless

40
00:02:11,199 --> 00:02:13,599
因為它叫stable 因為它會跟

41
00:02:13,599 --> 00:02:17,180
你上次穿過去的時候他是有互相關係的

42
00:02:17,180 --> 00:02:20,419
所以NAT呢 就不能叫stateless

43
00:02:20,419 --> 00:02:24,080
但是我們這個SIIT它在轉換的過程當中

44
00:02:24,080 --> 00:02:26,000
它跟過去的歷史就沒有關係

45
00:02:26,000 --> 00:02:27,180
所以我們說他是no state

46
00:02:28,180 --> 00:02:31,699
相當於是不會記錄他的關聯性的

47
00:02:31,699 --> 00:02:35,800
我們看一個這個例子就是說 那SIIT本身呢

48
00:02:35,800 --> 00:02:41,160
就用在說假設我們在左邊這邊他是一個v6的host

49
00:02:41,160 --> 00:02:43,840
他是個v6的工作站 或者v6的電腦

50
00:02:43,840 --> 00:02:45,319
那我們右邊呢是v4的網路

51
00:02:46,319 --> 00:02:51,319
那我們這個v6的封包 穿過這個SIIT的時候呢

52
00:02:51,319 --> 00:02:53,380
他就會直接做轉換

53
00:02:53,380 --> 00:02:56,580
比如說我們SIIT呢 就可以拿來做 很簡單

54
00:02:56,580 --> 00:02:58,360
它也不是建tunnel

55
00:02:58,360 --> 00:03:02,380
它就直接把封包從v6的封包轉成v4的封包

56
00:03:02,380 --> 00:03:03,720
也就是說header的對轉

57
00:03:03,720 --> 00:03:08,680
包含說ICMP v4跟ICMP v6的對轉

58
00:03:08,680 --> 00:03:12,979
也就是v4跟v6的header  包含是IP的header

59
00:03:12,979 --> 00:03:16,720
還有ICMP的header 都可以直接做轉換

60
00:03:17,720 --> 00:03:17,720
這個是SIIT的用法

61
00:03:17,940 --> 00:03:21,580
那我們再來看SIIT呢 另外一個用法就是說

62
00:03:21,580 --> 00:03:28,220
如果我左邊這邊 不是一個單獨的這個v6的這個主機

63
00:03:28,220 --> 00:03:31,759
而是一個我們叫做dual network 它是一個網路

64
00:03:31,759 --> 00:03:35,039
這個網路上面呢有v6的host

65
00:03:36,039 --> 00:03:39,539
也有v4的host 就是我有兩種都有

66
00:03:39,539 --> 00:03:42,099
就是我有v4的電腦也有v6的電腦

67
00:03:42,099 --> 00:03:44,919
所以我們叫做duel 的這種Network的時候呢

68
00:03:44,919 --> 00:03:48,900
好這個時候呢也適合用SIIT的方式呢

69
00:03:48,900 --> 00:03:50,620
來做所謂的封包的轉換

70
00:03:50,620 --> 00:03:54,259
一樣 當你的v6的host送封包過去的時候呢

71
00:03:54,259 --> 00:03:58,479
在這個SIIT呢一樣會直接做轉換

72
00:03:58,479 --> 00:04:03,960
那在轉換的過程當中 因為你從v6的這個網址

73
00:04:03,960 --> 00:04:08,060
轉成這個v4 所以一定要把位址做轉換

74
00:04:08,060 --> 00:04:12,720
那位址轉換你一定會需要一些 所謂的v4的位址

75
00:04:12,720 --> 00:04:16,519
所以說SIIT呢它本身一定要有一個pool

76
00:04:16,519 --> 00:04:20,500
等於說他手上會有一些這個v4的網址

77
00:04:20,500 --> 00:04:22,560
作為它這個轉過去的時候呢

78
00:04:22,560 --> 00:04:28,100
到底它要用哪一個這個v4來代表它 這個是它的 特別的地方

79
00:04:29,100 --> 00:04:33,600
好 那我們說SIIT本身他就適合說

80
00:04:33,600 --> 00:04:39,019
如果我們這個v6呢 這個side它沒有v4的位址

81
00:04:39,019 --> 00:04:40,880
也就是它只有v6的位址而已

82
00:04:40,880 --> 00:04:42,740
那這個時候比較適合來使用

83
00:04:42,740 --> 00:04:47,720
比如說 我們 在很多未來的sensor

84
00:04:47,720 --> 00:04:51,620
類似像傳感器啦或者感應器上面

85
00:04:51,620 --> 00:04:54,199
將來可能都會放上一個v6的位址

86
00:04:54,199 --> 00:04:57,240
那這種 這種所謂的sensor

87
00:04:57,240 --> 00:04:59,339
可能就很適合用SIIT

88
00:04:59,339 --> 00:05:03,579
因為它本身並沒有一個v4的位址 它不是dual state

89
00:05:03,579 --> 00:05:07,779
它是只有v6的位址 那很適合把它放到這個sensor上面

90
00:05:07,779 --> 00:05:10,220
把它做轉換 那另外就是說 嗯

91
00:05:11,220 --> 00:05:13,540
針對v6的這一端來講的話

92
00:05:13,540 --> 00:05:16,759
我們會用所謂的translatable的

93
00:05:16,759 --> 00:05:21,519
嗯address translatable就是說我們轉換過去的時候

94
00:05:21,519 --> 00:05:23,579
因為header轉換成header嘛

95
00:05:23,579 --> 00:05:26,759
所以我們盡量保留它的所謂的checksum

96
00:05:26,759 --> 00:05:28,660
因為我們在header裡面呢

97
00:05:28,660 --> 00:05:31,920
我們的TCP啦 UDP那個header裡面

98
00:05:31,920 --> 00:05:33,180
都有一個叫checksum嘛

99
00:05:33,180 --> 00:05:35,079
所以我們這個位址轉過去的時候

100
00:05:35,079 --> 00:05:37,819
希望能夠保留它原來那個checksum的意義在

101
00:05:37,819 --> 00:05:39,860
不要說我們封包一轉過去呢

102
00:05:39,860 --> 00:05:41,600
你checksum就會錯掉了

103
00:05:41,600 --> 00:05:43,360
所以希望說 以這個位址

104
00:05:43,360 --> 00:05:46,819
是我們叫做translatable就是你轉過去的時候呢

105
00:05:46,819 --> 00:05:49,420
你那個checksum是還是正確的意思

106
00:05:50,420 --> 00:05:53,380
就是說原來的header裡面有一個checksum的欄位

107
00:05:53,380 --> 00:05:56,420
那你轉過去之後呢 還是有checksum的欄位

108
00:05:56,420 --> 00:05:58,339
可是呢因為你的位址改掉了

109
00:05:58,339 --> 00:06:00,519
照理講那個checksum就會錯掉了

110
00:06:00,519 --> 00:06:02,819
可是我們這個translatable的位址就是說

111
00:06:02,819 --> 00:06:05,360
你這種位址轉換那你的checksum還是對的啦

112
00:06:05,360 --> 00:06:07,660
所以這個是比較重要的一個地方

113
00:06:07,660 --> 00:06:11,819
所以我們這個translatable的source的位址

114
00:06:11,819 --> 00:06:13,660
因為我們位址一定有兩個

115
00:06:13,660 --> 00:06:15,440
一個source 一個destination

116
00:06:15,440 --> 00:06:18,860
所以對source來講的話 我們可以從那個

117
00:06:18,860 --> 00:06:23,259
pool裡面去取得 取得這個 這個pool就是

118
00:06:23,259 --> 00:06:27,380
在前面講這個 在這個地方 這個是有一堆的

119
00:06:27,380 --> 00:06:30,339
v4的位址 從這邊取得

120
00:06:30,339 --> 00:06:32,699
我們叫做translatable的這些位址

121
00:06:32,699 --> 00:06:35,800
那第二個就是從這個domain name server來

122
00:06:35,800 --> 00:06:38,139
就是目的地 那目的地本身

123
00:06:38,139 --> 00:06:40,779
可以直接到domain name server去query

124
00:06:40,779 --> 00:06:44,459
去查到它所謂的目的地的這個位址

125
00:06:44,459 --> 00:06:46,899
這個就是SIIT的使用

126
00:06:46,899 --> 00:06:48,000
 Subtitles End: mo.dbxdb.com

