2
00:00:00,000 --> 00:00:05,410
我們來介紹一下阻斷服務攻擊的一個非常有名的案例

3
00:00:05,410 --> 00:00:06,880
叫做SYN Flooding

4
00:00:06,880 --> 00:00:12,510
就是說利用TCP建連線的 3-way handshaking

5
00:00:12,510 --> 00:00:16,010
是三方交握的過程當中

6
00:00:16,010 --> 00:00:20,010
利用這個SYN建連線的需求來發動攻擊

7
00:00:20,010 --> 00:00:25,380
也就是說攻擊者他用譬如說每秒數千個

8
00:00:25,380 --> 00:00:29,150
當然數萬個也可以 所謂的SYN的封包

9
00:00:29,150 --> 00:00:31,750
SYN的封包是用來建連線的

10
00:00:31,750 --> 00:00:34,110
等於說我這個攻擊者

11
00:00:34,110 --> 00:00:37,850
送出大量建連線的需求給某個server

12
00:00:37,850 --> 00:00:43,810
但是我用了偽造的 或者不存在的source IP

13
00:00:43,810 --> 00:00:47,510
這是最重要的就是說我送一個SYN給對方

14
00:00:47,510 --> 00:00:50,880
按照TCP建連線的方式是

15
00:00:50,880 --> 00:00:52,680
SYN  SYN-ACK  ACK

16
00:00:52,680 --> 00:00:54,610
就是他送一個SYN過去

17
00:00:54,610 --> 00:00:56,180
一般會回一個叫做SYN-ACK

18
00:00:56,180 --> 00:00:58,610
再回一個ACK 就是他是三次

19
00:00:58,610 --> 00:01:00,610
可是我送這個SYN過去的時候

20
00:01:00,610 --> 00:01:04,349
我的IP已經是偽造的

21
00:01:04,349 --> 00:01:07,380
偽造就是說不是我自己的是用別人的IP

22
00:01:07,380 --> 00:01:08,610
所以我送SYN過去

23
00:01:08,610 --> 00:01:12,250
Server回這個SYN-ACK就不是回到我這裡

24
00:01:12,250 --> 00:01:13,250
是回到別的地方去

25
00:01:13,250 --> 00:01:15,550
變成說我送給SYN給server

26
00:01:15,550 --> 00:01:18,209
server回SYN-ACK回到別的地方去

27
00:01:18,209 --> 00:01:21,910
那這個別的電腦他莫名其妙收到一個SYN-ACK

28
00:01:21,910 --> 00:01:23,680
當然他不會處理

29
00:01:23,680 --> 00:01:26,209
因為對他來講 這個不正常 他會把它丟掉

30
00:01:26,209 --> 00:01:31,750
那這樣的話那個第三個就是SYN ACK ACK

31
00:01:31,750 --> 00:01:36,480
那個第三個就不見 變成這個連線只建了一半

32
00:01:36,480 --> 00:01:41,480
我們說受害主機他會回送SYN-ACK

33
00:01:41,480 --> 00:01:43,680
問題他回這個SYN-ACK

34
00:01:43,680 --> 00:01:47,650
就給一個不存在的網址 或者偽造的網址

35
00:01:47,650 --> 00:01:51,310
有這個網址電腦的本身就不會回應

36
00:01:51,310 --> 00:01:54,349
因為他莫名其妙收到一個SYN-ACK的封包

37
00:01:54,349 --> 00:01:56,780
他會把它丟掉 他不會再回

38
00:01:56,780 --> 00:01:59,950
那不會再回 造成什麼現象呢

39
00:01:59,950 --> 00:02:02,709
就是說這個受害的主機

40
00:02:02,709 --> 00:02:08,949
他就建立了大量的一般我們叫半開放的連線

41
00:02:08,949 --> 00:02:10,849
叫做Half-open

42
00:02:10,849 --> 00:02:14,680
Half-open就是說本來連線如果可以成功建起來

43
00:02:14,680 --> 00:02:18,349
就是SYN SYN-ACK ACK 這個建起來

44
00:02:18,349 --> 00:02:20,849
一般叫做open connection

45
00:02:20,849 --> 00:02:23,380
就代表連線已經開放可以使用

46
00:02:23,380 --> 00:02:26,580
那這種建了一半的連線

47
00:02:26,580 --> 00:02:28,550
就叫做所謂的Half-open的connection

48
00:02:28,550 --> 00:02:30,910
建一半的連線到底有什麼問題

49
00:02:30,910 --> 00:02:34,650
我們說 因為這個server本身

50
00:02:34,650 --> 00:02:37,380
就受害主機本身在建連線的時候

51
00:02:37,380 --> 00:02:39,280
他要建一個叫做connection table

52
00:02:39,280 --> 00:02:40,910
他會有一個這個表

53
00:02:40,910 --> 00:02:45,349
因為每個連線到底他的IP是誰

54
00:02:45,349 --> 00:02:47,250
source IP、destination IP

55
00:02:47,250 --> 00:02:49,550
還有他現在的 port number

56
00:02:49,550 --> 00:02:51,550
source port number 、destination port number

57
00:02:51,550 --> 00:02:52,509
這個都要記下來

58
00:02:52,509 --> 00:02:55,009
那以後這個連線的封包來的時候

59
00:02:55,009 --> 00:02:58,210
我們才知道說這個封包是屬於哪一個連線

60
00:02:58,210 --> 00:03:00,410
所以這個server一定會

61
00:03:00,410 --> 00:03:02,979
維持一個connection table

62
00:03:02,979 --> 00:03:04,680
那connection table本身

63
00:03:04,680 --> 00:03:07,150
他會一直長一直長一直長

64
00:03:07,150 --> 00:03:11,880
那每一個這種連線如果都是半開放就代表說

65
00:03:11,880 --> 00:03:16,380
他會占掉table裡面的某一個位置

66
00:03:16,380 --> 00:03:18,509
一般table都放在memory

67
00:03:18,509 --> 00:03:21,280
所以這個memory、這個table可能會爆掉

68
00:03:21,280 --> 00:03:25,050
另外一個就是說因為這個port number是有限

69
00:03:25,050 --> 00:03:26,750
一般port number 是16位元

70
00:03:26,750 --> 00:03:28,080
所以通常六萬多個port

71
00:03:28,080 --> 00:03:31,050
那變成說你把這個port number把他耗掉

72
00:03:31,050 --> 00:03:34,610
等於說這個port number已經分配給這個連線

73
00:03:34,610 --> 00:03:38,180
可是這個連線又沒有建成功

74
00:03:38,180 --> 00:03:40,880
那你的port number就有可能被耗掉

75
00:03:40,880 --> 00:03:43,080
當然主要是那個所謂的memory的資源

76
00:03:43,080 --> 00:03:45,509
那使得說受害主機

77
00:03:45,509 --> 00:03:49,050
就沒有辦法在接受正常的連線

78
00:03:49,050 --> 00:03:53,210
因為這些異常的連線把資源佔住

79
00:03:53,210 --> 00:03:54,509
包含connection table

80
00:03:54,509 --> 00:03:57,180
把它塞爆掉 或者記憶體等等

81
00:03:57,180 --> 00:03:58,949
所以正常的連線就進不來

82
00:03:58,949 --> 00:04:01,449
進不來的結果就把這個服務

83
00:04:01,449 --> 00:04:03,410
等於把他阻斷掉的意思

84
00:04:03,410 --> 00:04:07,979
所以重點在阻斷 受害主機的服務能力

85
00:04:07,979 --> 00:04:13,250
那我們來看一下實際的過程是怎樣

86
00:04:13,250 --> 00:04:18,880
我們說攻擊者Attacker本身 他會送一個

87
00:04:18,880 --> 00:04:23,380
送一些SYN的封包過去 可能滿大量的

88
00:04:23,380 --> 00:04:27,449
因為量大 才有辦法讓這個table出問題

89
00:04:27,449 --> 00:04:31,110
如果我們送很多SYN的封包 建連線的封包

90
00:04:31,110 --> 00:04:36,110
然後我們說這個source IP是假的

91
00:04:36,110 --> 00:04:39,050
我們叫做spoofed 假的source IP

92
00:04:39,050 --> 00:04:41,209
像我這邊用了 A B C D

93
00:04:41,209 --> 00:04:44,680
就像那裡說我第一個用A 第二個用B

94
00:04:44,680 --> 00:04:47,449
第三個用C 第四個用D

95
00:04:47,449 --> 00:04:51,279
就是我這個送的封包 那個source IP都不一樣

96
00:04:51,279 --> 00:04:54,509
但是我也不知道這個IP是不是真的存在

97
00:04:54,509 --> 00:04:58,009
像譬如說A B C可能是真實存在 有電腦

98
00:04:58,009 --> 00:05:03,250
D可能這個IP根本就不存在

99
00:05:03,250 --> 00:05:05,910
但是反正我這個是假的

100
00:05:05,910 --> 00:05:08,009
我也不知道 我可能是亂數產生的

101
00:05:08,009 --> 00:05:10,980
就反正我們IP有一個範圍 32位元

102
00:05:10,980 --> 00:05:16,480
那我們在看 當我這個SYN送到這個受害者之後呢

103
00:05:16,480 --> 00:05:17,380
受害者本身

104
00:05:17,380 --> 00:05:20,279
他就會建這個所謂的connection table

105
00:05:20,279 --> 00:05:23,579
他會A B C D 把它建起來

106
00:05:23,579 --> 00:05:26,410
這個table 可能後面就是一直長

107
00:05:26,410 --> 00:05:30,410
那table就越來越大 就佔掉很多資源的意思

108
00:05:30,410 --> 00:05:32,110
然後他們就回SYN-ACK

109
00:05:32,110 --> 00:05:36,410
我們知道 TCP連線就是SYN SYN-ACK

110
00:05:36,410 --> 00:05:40,610
那SYN-ACK這個SYN-ACK本身到了這個server之後

111
00:05:40,610 --> 00:05:42,449
這個電腦如果有開機的

112
00:05:42,449 --> 00:05:45,149
那他們會覺得說 這個是什麼?

113
00:05:45,149 --> 00:05:47,410
他怎麼會跑出這個所謂的SYN-ACK

114
00:05:47,410 --> 00:05:52,850
他看不懂 他會把他丟棄

115
00:05:52,850 --> 00:05:57,180
那對於這個提到source IP

116
00:05:57,180 --> 00:05:59,610
根本不存在或者沒有開機

117
00:05:59,610 --> 00:06:02,680
這種SYN-ACK到這邊就沒有反應

118
00:06:02,680 --> 00:06:07,250
那不管是有收到還是沒有反應、沒有收到

119
00:06:07,250 --> 00:06:09,110
那都不會有反應的意思

120
00:06:09,110 --> 00:06:10,649
問題就在這裡

121
00:06:10,649 --> 00:06:13,050
我們剛剛提到這個connection table

122
00:06:13,050 --> 00:06:15,509
他就沒有建起來

123
00:06:15,509 --> 00:06:19,649
那你以後正常的流量進來的時候

124
00:06:19,649 --> 00:06:21,279
他就不會讓他建起來

125
00:06:21,279 --> 00:06:23,279
等於說SYN-Flooding

126
00:06:23,279 --> 00:06:26,279
就是利用這個SYN 大量的SYN

127
00:06:26,279 --> 00:06:30,880
假造的source IP 讓這個SYN ACK

128
00:06:30,880 --> 00:06:34,480
這個ACK反彈之後呢 就完全不見了

129
00:06:34,480 --> 00:06:39,449
連線只建一半 這個connection table變得不完整

130
00:06:39,449 --> 00:06:41,110
可是他又占掉記憶體

131
00:06:41,110 --> 00:06:45,649
那這樣就會讓這個所謂的受害者 就這個server

132
00:06:45,649 --> 00:06:48,949
就沒有辦法接受新的連線

133
00:06:48,949 --> 00:06:52,509
這是非常非常有名的SYN-Flooding的攻擊

134
00:06:52,509 --> 00:06:54,000
 Subtitles End: mo.dbxdb.com

