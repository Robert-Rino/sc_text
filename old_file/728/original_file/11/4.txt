2
00:00:00,000 --> 00:00:05,610
接下來我們來跟各位介紹這個阻斷服務攻擊的第三個案例

3
00:00:05,610 --> 00:00:07,610
這個案例非常有名

4
00:00:07,610 --> 00:00:09,480
叫做所謂的Smurf的Attack

5
00:00:09,480 --> 00:00:11,310
這個Smurf的Attack

6
00:00:11,310 --> 00:00:14,950
我們說他是一種所謂的借刀殺人的計策

7
00:00:14,950 --> 00:00:18,750
也就是說攻擊者他對某一個網域

8
00:00:18,750 --> 00:00:20,480
就是某一個子網路

9
00:00:20,480 --> 00:00:24,110
送出一個所謂的IP的廣播位置

10
00:00:24,110 --> 00:00:27,510
等於說他用IP broadcast address

11
00:00:27,510 --> 00:00:31,010
送到某一個網域裡面 像那個子網路裡面

12
00:00:31,010 --> 00:00:34,150
那送什麼呢 送一個ICMP的echo

13
00:00:34,150 --> 00:00:37,780
就跟那個ping一樣 送一個ICMP的echo進去

14
00:00:37,780 --> 00:00:41,079
進到一個網路裡面去 然後重點是說

15
00:00:41,079 --> 00:00:48,009
他的那個source ip 不是用真實的ip

16
00:00:48,009 --> 00:00:50,250
是用假的 我們叫偽造的ip

17
00:00:50,250 --> 00:00:52,980
偽造誰呢？偽造受害者

18
00:00:52,980 --> 00:00:55,049
偽造受害者 就是說

19
00:00:55,049 --> 00:00:58,680
因為這裡面網域裡面的每一台電腦

20
00:00:58,680 --> 00:01:03,049
收到這個ICMP的echo之後都會回一個ICMP的reply

21
00:01:03,049 --> 00:01:06,010
他會回覆 可是回覆的時候

22
00:01:06,010 --> 00:01:09,750
就不是回覆到原來發出這個封包的這個主機

23
00:01:09,750 --> 00:01:13,049
而是回到所謂的受害者的主機

24
00:01:13,049 --> 00:01:18,980
因為我們這個所謂的source IP是用這個受害者的IP

25
00:01:18,980 --> 00:01:23,250
每一台網域裡面的電腦 這個機器

26
00:01:23,250 --> 00:01:25,750
他都回主機 都回覆

27
00:01:25,750 --> 00:01:27,610
所以他會產生大量的回覆

28
00:01:27,610 --> 00:01:31,079
那這個大量的回覆就會造成第一個

29
00:01:31,079 --> 00:01:33,810
網路的頻寬他會阻塞

30
00:01:33,810 --> 00:01:36,380
網路夠大的話可能不阻塞

31
00:01:36,380 --> 00:01:39,209
可是網路的頻寬如果不夠大 網路就阻塞

32
00:01:39,209 --> 00:01:43,079
第二個 就網路本身假設沒有阻塞

33
00:01:43,079 --> 00:01:48,049
那這些reply就會全部衝到受害者的電腦上

34
00:01:48,049 --> 00:01:52,480
那受害的主機呢 他也要處理這種大量攻擊的封包

35
00:01:52,480 --> 00:01:55,110
那他本身就會非常的忙碌

36
00:01:55,110 --> 00:01:58,310
就耗盡他的所謂的資源resource

37
00:01:58,310 --> 00:02:00,810
那正常的服務就沒辦法使用

38
00:02:00,810 --> 00:02:03,780
我們來看一下 他一個實際的例子

39
00:02:03,780 --> 00:02:05,980
在這個攻擊裡面

40
00:02:05,980 --> 00:02:08,680
就是說我們講這個attacker攻擊者

41
00:02:08,680 --> 00:02:11,710
先送一個ICMP的echo

42
00:02:11,710 --> 00:02:14,780
這個封包送一個echo request

43
00:02:14,780 --> 00:02:16,449
這個封包比較特別就是說

44
00:02:16,449 --> 00:02:19,310
他這個所謂的source ip的位置

45
00:02:19,310 --> 00:02:24,509
是用所謂的受害者的主機的IP位置

46
00:02:24,509 --> 00:02:25,849
就相當於用他的IP位置

47
00:02:25,849 --> 00:02:28,710
用他的位置來當這個source IP

48
00:02:28,710 --> 00:02:32,479
這個封包是送到某一個網域 像這個LAN

49
00:02:32,479 --> 00:02:35,550
送進去之後是一個broadcast 他是廣播的

50
00:02:35,550 --> 00:02:37,610
廣播的結果相當於說

51
00:02:37,610 --> 00:02:41,280
這些所謂的在這個網域裡面的每一台電腦

52
00:02:41,280 --> 00:02:45,410
每一台主機 都會收到這樣的所謂的request

53
00:02:45,410 --> 00:02:47,550
他們都會回一個reply

54
00:02:47,550 --> 00:02:49,750
我們就來看這個reply本身

55
00:02:49,750 --> 00:02:53,910
他一回的時候就全部打到那個所謂的受害主機上面去

56
00:02:53,910 --> 00:02:59,150
因為這些request都是往這邊 往這邊丟

57
00:02:59,150 --> 00:03:04,080
這個reply本身都是往這個因為我們這個IP是假的

58
00:03:04,080 --> 00:03:08,810
就是利用假IP來讓這個反彈

59
00:03:08,810 --> 00:03:11,810
就回覆全部打到這個受害者去

60
00:03:11,810 --> 00:03:14,979
所以我們為什麼叫他借刀殺人

61
00:03:14,979 --> 00:03:16,750
等於說這個攻擊者

62
00:03:16,750 --> 00:03:19,380
他是送這樣子 打回去這樣子

63
00:03:19,380 --> 00:03:23,810
這個力道很大的時候 這個所謂的受害主機就會

64
00:03:23,810 --> 00:03:28,680
either是他忙不過來 或者網路本身就塞住了

65
00:03:28,680 --> 00:03:31,150
那網路本身這個地方 網路塞住

66
00:03:31,150 --> 00:03:34,080
對這個服務來講也是受到影響

67
00:03:34,080 --> 00:03:39,580
那我們再來看服務阻斷攻擊的第四個案例

68
00:03:39,580 --> 00:03:40,580
我們叫做Fraggle

69
00:03:40,580 --> 00:03:44,810
Fraggle本身他是用了所謂的UDP的攻擊

70
00:03:44,810 --> 00:03:48,280
他用UDP 那UDP protocol 裡面

71
00:03:48,280 --> 00:03:52,680
就是說攻擊者他送了大量的UDP的封包

72
00:03:52,680 --> 00:03:59,710
到受害所謂的網路的廣播的位置

73
00:03:59,710 --> 00:04:02,410
他一樣做broadcast的IP位置

74
00:04:02,410 --> 00:04:05,150
可是他UDP 那一樣

75
00:04:05,150 --> 00:04:08,780
這個網路裡面的主機如果收到UDP的封包

76
00:04:08,780 --> 00:04:12,280
他會回應一個UDP的封包

77
00:04:12,280 --> 00:04:14,509
等於說一個UDP 的reply

78
00:04:14,509 --> 00:04:17,550
同樣的會耗盡網路的頻寬

79
00:04:17,550 --> 00:04:22,380
或者是受害者 就是受害主機會收到大量的封包

80
00:04:22,380 --> 00:04:28,110
這個跟前面講那個smurf 就是異曲同工

81
00:04:28,110 --> 00:04:31,810
都是利用所謂的request跟reply

82
00:04:31,810 --> 00:04:34,850
一個request引發大量的reply

83
00:04:34,850 --> 00:04:38,410
這種技巧來攻擊所謂的受害者

84
00:04:38,410 --> 00:04:41,180
那我們可以看得到像這樣的話

85
00:04:41,180 --> 00:04:44,850
使得網路耗盡受害者的忙碌

86
00:04:44,850 --> 00:04:48,779
所以現在大部分的router都已經被設定說

87
00:04:48,779 --> 00:04:51,810
不轉送這種廣播封包

88
00:04:51,810 --> 00:04:54,810
這種廣播封包在router

89
00:04:54,810 --> 00:04:57,810
他就不把他送到這個網路裡面去

90
00:04:57,810 --> 00:05:01,550
這樣的話就不會這樣子產生這樣的攻擊

91
00:05:01,550 --> 00:05:03,050
不過我們還是先來看一下

92
00:05:03,050 --> 00:05:05,579
這個所謂的Fraggle的這種flooding

93
00:05:05,579 --> 00:05:07,279
到底是怎麼運作的

94
00:05:07,279 --> 00:05:08,610
我們一樣 譬如說

95
00:05:08,610 --> 00:05:12,449
這個attacker他也是送出一個這個封包

96
00:05:12,449 --> 00:05:15,779
可是這個封包 本身現在是UDP的echo的意思

97
00:05:15,779 --> 00:05:17,579
送一個UDP的封包

98
00:05:17,579 --> 00:05:22,709
那一樣這個source IP也是用假的

99
00:05:22,709 --> 00:05:27,149
我們叫做spoofed 就是偽造的source的IP

100
00:05:27,149 --> 00:05:29,209
然後送到一個這個router

101
00:05:29,209 --> 00:05:32,980
這個router本身因為這個封包是所謂的broadcast

102
00:05:32,980 --> 00:05:35,480
所以這個封包把他建在網路裡面去

103
00:05:35,480 --> 00:05:37,880
就廣播到每一個裡面的主機

104
00:05:37,880 --> 00:05:41,649
那每一個主機收到這個UDP的request他一樣要回

105
00:05:41,649 --> 00:05:46,850
那這個回就全部回給這個所謂的偽造的這個來源的IP

106
00:05:46,850 --> 00:05:50,509
所以你看這個回也都是打到victim去

107
00:05:50,509 --> 00:05:52,850
相當於這個在這邊繞了一圈之後

108
00:05:52,850 --> 00:05:55,649
就全部打這個victim

109
00:05:55,649 --> 00:05:58,509
victim本身就受到很大的流量

110
00:05:58,509 --> 00:06:02,750
那一樣 either是說這個網路本身阻塞

111
00:06:02,750 --> 00:06:05,649
或者這個server太忙碌

112
00:06:05,649 --> 00:06:10,180
這個都是非常有名的這種阻塞式的攻擊

113
00:06:10,180 --> 00:06:12,000
 Subtitles End: mo.dbxdb.com

