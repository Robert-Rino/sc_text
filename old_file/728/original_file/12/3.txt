2
00:00:00,000 --> 00:00:05,550
好我們來看一下所謂的packet filter這樣的技術

3
00:00:05,550 --> 00:00:08,280
那我們說這個傳統的packet filter本身

4
00:00:08,280 --> 00:00:11,280
他會分析每一個進來的封包

5
00:00:11,280 --> 00:00:14,780
然後根據以下的這些資料來決定說

6
00:00:14,780 --> 00:00:20,580
這個封包是不是要drop 還是說是要過還是不過呢

7
00:00:20,580 --> 00:00:24,350
我們就是說要看底下的資訊

8
00:00:24,350 --> 00:00:26,910
第一個就是所謂的source IP address

9
00:00:26,910 --> 00:00:29,710
就是我們會檢查所謂的source IP address

10
00:00:29,710 --> 00:00:32,780
第二個可能檢查是destination IP address

11
00:00:32,780 --> 00:00:36,850
那第三個可能會檢查所謂的source port

12
00:00:36,850 --> 00:00:39,480
或者destination port

13
00:00:39,480 --> 00:00:42,150
這個一般都是TCP或UDP的header

14
00:00:42,150 --> 00:00:46,680
那如果是第四層的話 當然也有可能檢查說這個

15
00:00:46,680 --> 00:00:51,410
所謂的TCP flag bits

16
00:00:51,410 --> 00:00:54,780
就是說因為TCP本身可能會有SYN建連線

17
00:00:54,780 --> 00:00:56,610
或者ACK 就我們有SYN-ACK

18
00:00:56,610 --> 00:00:58,850
這個建連線的過程當中

19
00:00:58,850 --> 00:01:03,510
這個TCP flag也是通常拿來做檢查的一個依據

20
00:01:03,510 --> 00:01:09,650
會檢查說這個封包到底是TCP或UDP或ICMP

21
00:01:09,650 --> 00:01:14,849
因為大部分的防火牆會把UDP block掉

22
00:01:14,849 --> 00:01:18,209
因為UDP通常只開放domain main service

23
00:01:18,209 --> 00:01:20,610
就UDP port53 通常會開放

24
00:01:20,610 --> 00:01:25,110
其他的UDP大部份都會把它中斷掉

25
00:01:25,110 --> 00:01:29,450
然後防火牆本身如果是pocket filter的技術的話

26
00:01:29,450 --> 00:01:31,580
他也會檢查封包的方向

27
00:01:31,580 --> 00:01:35,550
我們說這個封包是進入這個網路

28
00:01:35,550 --> 00:01:38,010
或者是說從網路離開

29
00:01:38,010 --> 00:01:42,049
等於說這個方向本身也是一個檢查的這個依據

30
00:01:42,049 --> 00:01:46,480
最後還有一個就是所謂的我們router interface

31
00:01:46,480 --> 00:01:50,380
因為這個路由器本身他有很多的介面卡

32
00:01:50,380 --> 00:01:51,980
我們叫很多interface

33
00:01:51,980 --> 00:01:54,680
那每一個interface就是一個網路的接口

34
00:01:54,680 --> 00:02:01,110
每一個這個interface本身都可以有自己的policy

35
00:02:01,110 --> 00:02:06,709
就是說不同的介面卡會有不同的決策的意思

36
00:02:06,709 --> 00:02:10,310
就是這個封包從這個網卡進來是可以的

37
00:02:10,310 --> 00:02:13,479
但是如果這個封包從另外一個網卡進來

38
00:02:13,479 --> 00:02:18,250
可能就不行 也就是說不同的網卡可以有不同的策略

39
00:02:18,250 --> 00:02:22,610
這是所謂的packet filter它們常做的一個技術

40
00:02:22,610 --> 00:02:24,580
我們說packet filter本身

41
00:02:24,580 --> 00:02:28,910
他是在network layer來檢查這個封包的內容

42
00:02:28,910 --> 00:02:33,910
所以他一般都是放在這個像router裡面的一個功能

43
00:02:33,910 --> 00:02:36,349
也就是說我們這個通訊本身

44
00:02:36,349 --> 00:02:42,780
Client端是從Application然後送到這個router

45
00:02:42,780 --> 00:02:47,150
那router本身在網路層就做packet filter的功能

46
00:02:47,150 --> 00:02:49,449
等於說檢查這個封包的內容

47
00:02:49,449 --> 00:02:53,780
如果可以通的過的話 才送到網路裡面去 再往上送

48
00:02:53,780 --> 00:02:56,310
也就是說在network layer

49
00:02:56,310 --> 00:02:59,080
router這邊來做這個進行

50
00:02:59,080 --> 00:03:04,479
那他的這個決策通常就是說比較簡單一點

51
00:03:04,479 --> 00:03:07,650
就是說可能是會讓這個封包通過

52
00:03:07,650 --> 00:03:10,310
或者讓這個封包被drop掉

53
00:03:10,310 --> 00:03:12,509
就他的model是比較簡單一點點

54
00:03:12,509 --> 00:03:17,780
然後他對比較高層的protocol也比較不清楚

55
00:03:17,780 --> 00:03:20,509
就他不會去檢查那個higher layer的protocol

56
00:03:20,509 --> 00:03:21,580
譬如說封包的內容

57
00:03:21,580 --> 00:03:24,680
一般在做packet filter的時候就不去檢查

58
00:03:24,680 --> 00:03:28,650
因為這個不是他的主要的功能

59
00:03:28,650 --> 00:03:29,949
那我們再來看說

60
00:03:29,949 --> 00:03:33,349
packet filter本身目前是防火牆裡面

61
00:03:33,349 --> 00:03:37,210
算是最普遍 用得最多的技術

62
00:03:37,210 --> 00:03:41,349
那我們說他會Inspect packet

63
00:03:41,349 --> 00:03:42,880
等於他會檢查封包的內容

64
00:03:42,880 --> 00:03:45,080
每一個封包都會單獨的檢查

65
00:03:45,080 --> 00:03:47,479
然後包含剛剛提到檢查他的

66
00:03:47,479 --> 00:03:53,410
source IP、destination IP、port number

67
00:03:53,410 --> 00:03:56,009
這個是最常見的這個檢查的內容

68
00:03:56,009 --> 00:04:01,280
我們說一個封包的IP位置還有他的port number

69
00:04:01,280 --> 00:04:05,080
就必須跟一個叫做access control rules

70
00:04:05,080 --> 00:04:07,910
一般也可以叫做access control list

71
00:04:07,910 --> 00:04:12,150
就是一個規則 那這些規則本身要去做所謂的比較

72
00:04:12,150 --> 00:04:16,579
看看說這些IP的位置、port number

73
00:04:16,579 --> 00:04:20,279
是不是符合我們自訂的這個所謂的安全的規則

74
00:04:20,279 --> 00:04:23,509
那如果是符合 那我們就會檢查說

75
00:04:23,509 --> 00:04:27,410
那到底是允許還是不允許這個封包通過

76
00:04:27,410 --> 00:04:32,410
所以等一下我們就來看說 這樣的檢查到底怎麼檢查

77
00:04:32,410 --> 00:04:36,110
那因為他檢查只檢查這個所謂的header

78
00:04:36,110 --> 00:04:38,079
就封包的IP跟port number

79
00:04:38,079 --> 00:04:42,310
所以相對來講這個檢查的複雜度比較低

80
00:04:42,310 --> 00:04:46,509
所以我們說這種檢查封包可以非常的快速

81
00:04:46,509 --> 00:04:49,610
就是說這個動作可以很快就可以檢查

82
00:04:49,610 --> 00:04:55,779
但是如果說我們這個所謂的access control rules

83
00:04:55,779 --> 00:04:57,410
就是如果我們的規則如果很多

84
00:04:57,410 --> 00:05:00,910
而且如果規則很長 而且很複雜的話

85
00:05:00,910 --> 00:05:03,579
那就會降低整個效能 也就是說

86
00:05:03,579 --> 00:05:07,250
一個封包的header跟一個規則的比較

87
00:05:07,250 --> 00:05:08,980
是很單純的 這個很快

88
00:05:08,980 --> 00:05:12,949
但是如果我們的規則很多 然後要一一比較

89
00:05:12,949 --> 00:05:15,610
那這個可能整個速度就會受到影響

90
00:05:15,610 --> 00:05:18,709
而且這個packet filter他也只能檢查

91
00:05:18,709 --> 00:05:21,880
我們叫low-level的特徵

92
00:05:21,880 --> 00:05:23,810
low-level就是只因為它只有檢查

93
00:05:23,810 --> 00:05:26,250
像IP的address跟port number

94
00:05:26,250 --> 00:05:29,779
所以沒有辦法去檢查藏在這個封包

95
00:05:29,779 --> 00:05:33,850
譬如說內容裡面的東西 或是一般的惡意程式

96
00:05:33,850 --> 00:05:36,380
這所謂的malicious  code

97
00:05:36,380 --> 00:05:37,910
惡意程式通常他是

98
00:05:37,910 --> 00:05:40,610
他的特徵是藏在那個封包的內容

99
00:05:40,610 --> 00:05:42,880
那這個技術就檢查不到

100
00:05:42,880 --> 00:05:44,000
 Subtitles End: mo.dbxdb.com

